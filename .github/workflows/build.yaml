name: build
on: 
  push:
    branches: dlech

jobs:
  pywinrt:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - run: ./scripts/build_pywinrt_nuget.cmd
      - uses: actions/upload-artifact@v2
        with:
          name: pywinrt_nuget_${{ github.run_id }}
          path: PyWinRT.*.nupkg
  projection:
    needs: pywinrt
    runs-on: windows-2022
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        architecture: ['x86', 'x64']
        release-type: ['Release'] # no "Debug" - https://github.com/actions/setup-python/issues/86
    name: Python ${{ matrix.python-version }} ${{ matrix.architecture }} ${{ matrix.release-type }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          architecture: ${{ matrix.architecture }}
      - uses: actions/download-artifact@v2
        with:
          name: pywinrt_nuget_${{ github.run_id }}
      - name: Generate and build
        run: |
          Import-Module "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"
          Enter-VsDevShell -SkipAutomaticLocation -VsInstallPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" -DevCmdArguments '-arch=${{ matrix.architecture }}'
          cd projection
          ./generate.ps1 -fullProjection -useLocalPyWinRTNuget
          ./build.ps1 -buildType ${{ matrix.release-type }} -pythonVersion ${{ matrix.python-version }}
        shell: powershell
      - uses: actions/upload-artifact@v2
        with:
          name: pywinrt_py${{ matrix.python-version }}_${{ matrix.architecture }}_${{ github.run_id }}
          path: projection/pywinrt/
