name: test
on: 
  push:
    branches:
      - main
  pull_request:
    paths:
      - .github/workflows/test.yaml
      - scripts/**
      - src/**
      - test/**

jobs:
  generate:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Build pywinrt.exe
        run: ./scripts/vsdevcmd-build.cmd
      - name: generate
        working-directory: projection
        run: ./generate.ps1
      - uses: actions/upload-artifact@v3
        with:
          name: generated
          path: |
            projection/cppwinrt/
            projection/pywinrt/
  msvc:
    runs-on: windows-2022
    needs: generate
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', "3.11", "3.12"]
        architecture: ['x86', 'x64']
        release-type: ['Release'] # no "Debug" - https://github.com/actions/setup-python/issues/86
    name: Python ${{ matrix.python-version }} ${{ matrix.architecture }} ${{ matrix.release-type }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: generated
          path: projection/
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          architecture: ${{ matrix.architecture }}
      - name: build
        run: |
          Import-Module "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"
          Enter-VsDevShell -SkipAutomaticLocation -VsInstallPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" -DevCmdArguments '-arch=${{ matrix.architecture }}'
          cd projection
          ./build.ps1 -buildType ${{ matrix.release-type }} -pythonVersion ${{ matrix.python-version }}
        shell: powershell
      - name: test
        env:
          PYTHONPATH: projection/pywinrt
        run: python -m unittest -v
  mingw:
    runs-on: windows-2022
    needs: generate
    strategy:
      fail-fast: false
      matrix:
        sys:
          - mingw32
          - mingw64
          - ucrt64
          - clang32
          - clang64
    name: 'Building on MSYS ${{ matrix.sys }}'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: generated
          path: projection/
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          pacboy: >-
            cc:p
            cmake:p
            python:p
      # HACK: work around https://github.com/msys2/MINGW-packages/issues/17998
      - name: patch headers
        run: sed 's/enum \(DirectXAlphaMode\|DirectXPixelFormat\)/ABI::Windows::Graphics::DirectX::\1/' ${MINGW_PREFIX}/include/windows.ui.composition.h -i
      - name: build
        run: |
          ${MINGW_PREFIX}/bin/cmake -S projection -B _build/${MSYSTEM} -DPython3_ROOT_DIR=${MINGW_PREFIX}
          ${MINGW_PREFIX}/bin/cmake --build _build/${MSYSTEM} -v
          cp _build/${MSYSTEM}/_winrt.pyd projection/pywinrt/winrt/
      - name: test
        env:
          PYTHONPATH: projection/pywinrt
        run: ${MINGW_PREFIX}/bin/python -m unittest -v
  lint:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Build pywinrt
        run: ./scripts/vsdevcmd-build.cmd
      - name: Generate full projection
        run: |
          cd projection
          ./generate -fullProjection
      - name: Run mypy
        run: |
          cd projection
          pipx run mypy -p winrt
