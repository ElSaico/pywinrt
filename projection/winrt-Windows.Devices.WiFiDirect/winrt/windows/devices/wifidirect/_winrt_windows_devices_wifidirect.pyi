# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.devices.enumeration
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.networking
import winrt.windows.security.credentials
import winrt.windows.storage.streams

from . import WiFiDirectAdvertisementListenStateDiscoverability, WiFiDirectAdvertisementPublisherStatus, WiFiDirectConfigurationMethod, WiFiDirectConnectionStatus, WiFiDirectDeviceSelectorType, WiFiDirectError, WiFiDirectPairingProcedure

Self = typing.TypeVar('Self')

class WiFiDirectAdvertisement(winrt.system.Object):
    listen_state_discoverability: WiFiDirectAdvertisementListenStateDiscoverability
    is_autonomous_group_owner_enabled: bool
    information_elements: typing.Optional[winrt.windows.foundation.collections.IVector[WiFiDirectInformationElement]]
    legacy_settings: typing.Optional[WiFiDirectLegacySettings]
    supported_configuration_methods: typing.Optional[winrt.windows.foundation.collections.IVector[WiFiDirectConfigurationMethod]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectAdvertisement: ...

class WiFiDirectAdvertisementPublisher(winrt.system.Object):
    advertisement: typing.Optional[WiFiDirectAdvertisement]
    status: WiFiDirectAdvertisementPublisherStatus
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectAdvertisementPublisher: ...
    def __new__(cls: typing.Type[WiFiDirectAdvertisementPublisher]) -> WiFiDirectAdvertisementPublisher:...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def add_status_changed(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectAdvertisementPublisher, WiFiDirectAdvertisementPublisherStatusChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_status_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class WiFiDirectAdvertisementPublisherStatusChangedEventArgs(winrt.system.Object):
    error: WiFiDirectError
    status: WiFiDirectAdvertisementPublisherStatus
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectAdvertisementPublisherStatusChangedEventArgs: ...

class WiFiDirectConnectionListener(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectConnectionListener: ...
    def __new__(cls: typing.Type[WiFiDirectConnectionListener]) -> WiFiDirectConnectionListener:...
    def add_connection_requested(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectConnectionListener, WiFiDirectConnectionRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_connection_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class WiFiDirectConnectionParameters(winrt.system.Object):
    group_owner_intent: winrt.system.Int16
    preferred_pairing_procedure: WiFiDirectPairingProcedure
    preference_ordered_configuration_methods: typing.Optional[winrt.windows.foundation.collections.IVector[WiFiDirectConfigurationMethod]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectConnectionParameters: ...
    def __new__(cls: typing.Type[WiFiDirectConnectionParameters]) -> WiFiDirectConnectionParameters:...
    @staticmethod
    def get_device_pairing_kinds(configuration_method: WiFiDirectConfigurationMethod, /) -> winrt.windows.devices.enumeration.DevicePairingKinds: ...

class WiFiDirectConnectionRequest(winrt.system.Object):
    device_information: typing.Optional[winrt.windows.devices.enumeration.DeviceInformation]
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectConnectionRequest: ...
    def close(self) -> None: ...

class WiFiDirectConnectionRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectConnectionRequestedEventArgs: ...
    def get_connection_request(self) -> typing.Optional[WiFiDirectConnectionRequest]: ...

class WiFiDirectDevice(winrt.system.Object):
    connection_status: WiFiDirectConnectionStatus
    device_id: str
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectDevice: ...
    def close(self) -> None: ...
    @typing.overload
    @staticmethod
    def from_id_async(device_id: str, /) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectDevice]: ...
    @typing.overload
    @staticmethod
    def from_id_async(device_id: str, connection_parameters: typing.Optional[WiFiDirectConnectionParameters], /) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectDevice]: ...
    def get_connection_endpoint_pairs(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.networking.EndpointPair]]: ...
    @typing.overload
    @staticmethod
    def get_device_selector() -> str: ...
    @typing.overload
    @staticmethod
    def get_device_selector(type: WiFiDirectDeviceSelectorType, /) -> str: ...
    def add_connection_status_changed(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectDevice, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_connection_status_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class WiFiDirectInformationElement(winrt.system.Object):
    value: typing.Optional[winrt.windows.storage.streams.IBuffer]
    oui_type: winrt.system.UInt8
    oui: typing.Optional[winrt.windows.storage.streams.IBuffer]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectInformationElement: ...
    def __new__(cls: typing.Type[WiFiDirectInformationElement]) -> WiFiDirectInformationElement:...
    @staticmethod
    def create_from_buffer(buffer: typing.Optional[winrt.windows.storage.streams.IBuffer], /) -> typing.Optional[winrt.windows.foundation.collections.IVector[WiFiDirectInformationElement]]: ...
    @staticmethod
    def create_from_device_information(device_information: typing.Optional[winrt.windows.devices.enumeration.DeviceInformation], /) -> typing.Optional[winrt.windows.foundation.collections.IVector[WiFiDirectInformationElement]]: ...

class WiFiDirectLegacySettings(winrt.system.Object):
    ssid: str
    passphrase: typing.Optional[winrt.windows.security.credentials.PasswordCredential]
    is_enabled: bool
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectLegacySettings: ...

