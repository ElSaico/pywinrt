# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.foundation.numerics
import winrt.windows.ui.composition
import winrt.windows.ui.input

from . import InteractionBindingAxisModes, InteractionChainingMode, InteractionSourceMode, InteractionSourceRedirectionMode, InteractionTrackerClampingOption, InteractionTrackerPositionUpdateOption, VisualInteractionSourceRedirectionMode

Self = typing.TypeVar('Self')

class CompositionConditionalValue(winrt.system.Object):
    value: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    condition: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionConditionalValue: ...
    @staticmethod
    def create(compositor: typing.Optional[winrt.windows.ui.composition.Compositor], /) -> typing.Optional[CompositionConditionalValue]: ...

class CompositionInteractionSourceCollection(winrt.system.Object):
    count: winrt.system.Int32
    def __iter__(self) -> winrt.windows.foundation.collections.IIterator[ICompositionInteractionSource]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionInteractionSourceCollection: ...
    def add(self, value: typing.Optional[ICompositionInteractionSource], /) -> None: ...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[ICompositionInteractionSource]]: ...
    def remove(self, value: typing.Optional[ICompositionInteractionSource], /) -> None: ...
    def remove_all(self) -> None: ...

class InteractionSourceConfiguration(winrt.system.Object):
    scale_source_mode: InteractionSourceRedirectionMode
    position_y_source_mode: InteractionSourceRedirectionMode
    position_x_source_mode: InteractionSourceRedirectionMode
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionSourceConfiguration: ...

class InteractionTracker(winrt.system.Object):
    scale_inertia_decay_rate: typing.Optional[typing.Optional[winrt.system.Single]]
    position_inertia_decay_rate: typing.Optional[typing.Optional[winrt.windows.foundation.numerics.Vector3]]
    min_scale: winrt.system.Single
    min_position: winrt.windows.foundation.numerics.Vector3
    max_scale: winrt.system.Single
    max_position: winrt.windows.foundation.numerics.Vector3
    interaction_sources: typing.Optional[CompositionInteractionSourceCollection]
    is_position_rounding_suggested: bool
    natural_resting_position: winrt.windows.foundation.numerics.Vector3
    natural_resting_scale: winrt.system.Single
    owner: typing.Optional[IInteractionTrackerOwner]
    position: winrt.windows.foundation.numerics.Vector3
    position_velocity_in_pixels_per_second: winrt.windows.foundation.numerics.Vector3
    scale: winrt.system.Single
    scale_velocity_in_percent_per_second: winrt.system.Single
    is_inertia_from_impulse: bool
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTracker: ...
    def adjust_position_x_if_greater_than_threshold(self, adjustment: winrt.system.Single, position_threshold: winrt.system.Single, /) -> None: ...
    def adjust_position_y_if_greater_than_threshold(self, adjustment: winrt.system.Single, position_threshold: winrt.system.Single, /) -> None: ...
    def configure_center_point_x_inertia_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_center_point_y_inertia_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_position_x_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerInertiaModifier], /) -> None: ...
    def configure_position_y_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerInertiaModifier], /) -> None: ...
    def configure_scale_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerInertiaModifier], /) -> None: ...
    def configure_vector2_position_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerVector2InertiaModifier], /) -> None: ...
    @staticmethod
    def create(compositor: typing.Optional[winrt.windows.ui.composition.Compositor], /) -> typing.Optional[InteractionTracker]: ...
    @staticmethod
    def create_with_owner(compositor: typing.Optional[winrt.windows.ui.composition.Compositor], owner: typing.Optional[IInteractionTrackerOwner], /) -> typing.Optional[InteractionTracker]: ...
    @staticmethod
    def get_binding_mode(bound_tracker1: typing.Optional[InteractionTracker], bound_tracker2: typing.Optional[InteractionTracker], /) -> InteractionBindingAxisModes: ...
    @staticmethod
    def set_binding_mode(bound_tracker1: typing.Optional[InteractionTracker], bound_tracker2: typing.Optional[InteractionTracker], axis_mode: InteractionBindingAxisModes, /) -> None: ...
    @typing.overload
    def try_update_position(self, value: winrt.windows.foundation.numerics.Vector3, /) -> winrt.system.Int32: ...
    @typing.overload
    def try_update_position(self, value: winrt.windows.foundation.numerics.Vector3, option: InteractionTrackerClampingOption, /) -> winrt.system.Int32: ...
    @typing.overload
    def try_update_position(self, value: winrt.windows.foundation.numerics.Vector3, option: InteractionTrackerClampingOption, pos_update_option: InteractionTrackerPositionUpdateOption, /) -> winrt.system.Int32: ...
    @typing.overload
    def try_update_position_by(self, amount: winrt.windows.foundation.numerics.Vector3, /) -> winrt.system.Int32: ...
    @typing.overload
    def try_update_position_by(self, amount: winrt.windows.foundation.numerics.Vector3, option: InteractionTrackerClampingOption, /) -> winrt.system.Int32: ...
    def try_update_position_with_additional_velocity(self, velocity_in_pixels_per_second: winrt.windows.foundation.numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_position_with_animation(self, animation: typing.Optional[winrt.windows.ui.composition.CompositionAnimation], /) -> winrt.system.Int32: ...
    def try_update_scale(self, value: winrt.system.Single, center_point: winrt.windows.foundation.numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_scale_with_additional_velocity(self, velocity_in_percent_per_second: winrt.system.Single, center_point: winrt.windows.foundation.numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_scale_with_animation(self, animation: typing.Optional[winrt.windows.ui.composition.CompositionAnimation], center_point: winrt.windows.foundation.numerics.Vector3, /) -> winrt.system.Int32: ...

class InteractionTrackerCustomAnimationStateEnteredArgs(winrt.system.Object):
    request_id: winrt.system.Int32
    is_from_binding: bool
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerCustomAnimationStateEnteredArgs: ...

class InteractionTrackerIdleStateEnteredArgs(winrt.system.Object):
    request_id: winrt.system.Int32
    is_from_binding: bool
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerIdleStateEnteredArgs: ...

class InteractionTrackerInertiaModifier(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaModifier: ...

class InteractionTrackerInertiaMotion(winrt.system.Object):
    motion: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    condition: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaMotion: ...
    @staticmethod
    def create(compositor: typing.Optional[winrt.windows.ui.composition.Compositor], /) -> typing.Optional[InteractionTrackerInertiaMotion]: ...

class InteractionTrackerInertiaNaturalMotion(winrt.system.Object):
    natural_motion: typing.Optional[winrt.windows.ui.composition.ScalarNaturalMotionAnimation]
    condition: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaNaturalMotion: ...
    @staticmethod
    def create(compositor: typing.Optional[winrt.windows.ui.composition.Compositor], /) -> typing.Optional[InteractionTrackerInertiaNaturalMotion]: ...

class InteractionTrackerInertiaRestingValue(winrt.system.Object):
    resting_value: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    condition: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaRestingValue: ...
    @staticmethod
    def create(compositor: typing.Optional[winrt.windows.ui.composition.Compositor], /) -> typing.Optional[InteractionTrackerInertiaRestingValue]: ...

class InteractionTrackerInertiaStateEnteredArgs(winrt.system.Object):
    modified_resting_position: typing.Optional[typing.Optional[winrt.windows.foundation.numerics.Vector3]]
    modified_resting_scale: typing.Optional[typing.Optional[winrt.system.Single]]
    natural_resting_position: winrt.windows.foundation.numerics.Vector3
    natural_resting_scale: winrt.system.Single
    position_velocity_in_pixels_per_second: winrt.windows.foundation.numerics.Vector3
    request_id: winrt.system.Int32
    scale_velocity_in_percent_per_second: winrt.system.Single
    is_inertia_from_impulse: bool
    is_from_binding: bool
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaStateEnteredArgs: ...

class InteractionTrackerInteractingStateEnteredArgs(winrt.system.Object):
    request_id: winrt.system.Int32
    is_from_binding: bool
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInteractingStateEnteredArgs: ...

class InteractionTrackerRequestIgnoredArgs(winrt.system.Object):
    request_id: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerRequestIgnoredArgs: ...

class InteractionTrackerValuesChangedArgs(winrt.system.Object):
    position: winrt.windows.foundation.numerics.Vector3
    request_id: winrt.system.Int32
    scale: winrt.system.Single
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerValuesChangedArgs: ...

class InteractionTrackerVector2InertiaModifier(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerVector2InertiaModifier: ...

class InteractionTrackerVector2InertiaNaturalMotion(winrt.system.Object):
    natural_motion: typing.Optional[winrt.windows.ui.composition.Vector2NaturalMotionAnimation]
    condition: typing.Optional[winrt.windows.ui.composition.ExpressionAnimation]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerVector2InertiaNaturalMotion: ...
    @staticmethod
    def create(compositor: typing.Optional[winrt.windows.ui.composition.Compositor], /) -> typing.Optional[InteractionTrackerVector2InertiaNaturalMotion]: ...

class VisualInteractionSource(winrt.system.Object):
    scale_source_mode: InteractionSourceMode
    scale_chaining_mode: InteractionChainingMode
    position_y_source_mode: InteractionSourceMode
    position_y_chaining_mode: InteractionChainingMode
    position_x_source_mode: InteractionSourceMode
    position_x_chaining_mode: InteractionChainingMode
    manipulation_redirection_mode: VisualInteractionSourceRedirectionMode
    is_position_y_rails_enabled: bool
    is_position_x_rails_enabled: bool
    source: typing.Optional[winrt.windows.ui.composition.Visual]
    delta_position: winrt.windows.foundation.numerics.Vector3
    delta_scale: winrt.system.Single
    position: winrt.windows.foundation.numerics.Vector3
    position_velocity: winrt.windows.foundation.numerics.Vector3
    scale: winrt.system.Single
    scale_velocity: winrt.system.Single
    pointer_wheel_config: typing.Optional[InteractionSourceConfiguration]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VisualInteractionSource: ...
    def configure_center_point_x_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_center_point_y_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_delta_position_x_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_delta_position_y_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_delta_scale_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    @staticmethod
    def create(source: typing.Optional[winrt.windows.ui.composition.Visual], /) -> typing.Optional[VisualInteractionSource]: ...
    @staticmethod
    def create_from_i_visual_element(source: typing.Optional[winrt.windows.ui.composition.IVisualElement], /) -> typing.Optional[VisualInteractionSource]: ...
    def try_redirect_for_manipulation(self, pointer_point: typing.Optional[winrt.windows.ui.input.PointerPoint], /) -> None: ...

class ICompositionInteractionSource(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICompositionInteractionSource: ...

class IInteractionTrackerOwner(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IInteractionTrackerOwner: ...
    def custom_animation_state_entered(self, sender: typing.Optional[InteractionTracker], args: typing.Optional[InteractionTrackerCustomAnimationStateEnteredArgs], /) -> None: ...
    def idle_state_entered(self, sender: typing.Optional[InteractionTracker], args: typing.Optional[InteractionTrackerIdleStateEnteredArgs], /) -> None: ...
    def inertia_state_entered(self, sender: typing.Optional[InteractionTracker], args: typing.Optional[InteractionTrackerInertiaStateEnteredArgs], /) -> None: ...
    def interacting_state_entered(self, sender: typing.Optional[InteractionTracker], args: typing.Optional[InteractionTrackerInteractingStateEnteredArgs], /) -> None: ...
    def request_ignored(self, sender: typing.Optional[InteractionTracker], args: typing.Optional[InteractionTrackerRequestIgnoredArgs], /) -> None: ...
    def values_changed(self, sender: typing.Optional[InteractionTracker], args: typing.Optional[InteractionTrackerValuesChangedArgs], /) -> None: ...

