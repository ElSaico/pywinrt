# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation.collections
import winrt.windows.gaming.input

from . import InjectedInputButtonChangeKind, InjectedInputKeyOptions, InjectedInputMouseOptions, InjectedInputPenButtons, InjectedInputPenParameters, InjectedInputPointerOptions, InjectedInputShortcut, InjectedInputTouchParameters, InjectedInputVisualizationMode

Self = typing.TypeVar('Self')

class InjectedInputPoint:
    position_x: winrt.system.Int32
    position_y: winrt.system.Int32
    def __new__(cls: typing.Type[InjectedInputPoint], position_x: winrt.system.Int32, position_y: winrt.system.Int32) -> InjectedInputPoint: ...

class InjectedInputPointerInfo:
    pointer_id: winrt.system.UInt32
    pointer_options: InjectedInputPointerOptions
    pixel_location: InjectedInputPoint
    time_offset_in_milliseconds: winrt.system.UInt32
    performance_count: winrt.system.UInt64
    def __new__(cls: typing.Type[InjectedInputPointerInfo], pointer_id: winrt.system.UInt32, pointer_options: InjectedInputPointerOptions, pixel_location: InjectedInputPoint, time_offset_in_milliseconds: winrt.system.UInt32, performance_count: winrt.system.UInt64) -> InjectedInputPointerInfo: ...

class InjectedInputRectangle:
    left: winrt.system.Int32
    top: winrt.system.Int32
    bottom: winrt.system.Int32
    right: winrt.system.Int32
    def __new__(cls: typing.Type[InjectedInputRectangle], left: winrt.system.Int32, top: winrt.system.Int32, bottom: winrt.system.Int32, right: winrt.system.Int32) -> InjectedInputRectangle: ...

class InjectedInputGamepadInfo(winrt.system.Object):
    right_trigger: winrt.system.Double
    right_thumbstick_y: winrt.system.Double
    right_thumbstick_x: winrt.system.Double
    left_trigger: winrt.system.Double
    left_thumbstick_y: winrt.system.Double
    left_thumbstick_x: winrt.system.Double
    buttons: winrt.windows.gaming.input.GamepadButtons
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InjectedInputGamepadInfo: ...
    @typing.overload
    def __new__(cls: typing.Type[InjectedInputGamepadInfo], reading: winrt.windows.gaming.input.GamepadReading) -> InjectedInputGamepadInfo:...
    @typing.overload
    def __new__(cls: typing.Type[InjectedInputGamepadInfo]) -> InjectedInputGamepadInfo:...

class InjectedInputKeyboardInfo(winrt.system.Object):
    virtual_key: winrt.system.UInt16
    scan_code: winrt.system.UInt16
    key_options: InjectedInputKeyOptions
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InjectedInputKeyboardInfo: ...
    def __new__(cls: typing.Type[InjectedInputKeyboardInfo]) -> InjectedInputKeyboardInfo:...

class InjectedInputMouseInfo(winrt.system.Object):
    time_offset_in_milliseconds: winrt.system.UInt32
    mouse_options: InjectedInputMouseOptions
    mouse_data: winrt.system.UInt32
    delta_y: winrt.system.Int32
    delta_x: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InjectedInputMouseInfo: ...
    def __new__(cls: typing.Type[InjectedInputMouseInfo]) -> InjectedInputMouseInfo:...

class InjectedInputPenInfo(winrt.system.Object):
    tilt_y: winrt.system.Int32
    tilt_x: winrt.system.Int32
    rotation: winrt.system.Double
    pressure: winrt.system.Double
    pointer_info: InjectedInputPointerInfo
    pen_parameters: InjectedInputPenParameters
    pen_buttons: InjectedInputPenButtons
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InjectedInputPenInfo: ...
    def __new__(cls: typing.Type[InjectedInputPenInfo]) -> InjectedInputPenInfo:...

class InjectedInputTouchInfo(winrt.system.Object):
    touch_parameters: InjectedInputTouchParameters
    pressure: winrt.system.Double
    pointer_info: InjectedInputPointerInfo
    orientation: winrt.system.Int32
    contact: InjectedInputRectangle
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InjectedInputTouchInfo: ...
    def __new__(cls: typing.Type[InjectedInputTouchInfo]) -> InjectedInputTouchInfo:...

class InputInjector(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InputInjector: ...
    def initialize_gamepad_injection(self) -> None: ...
    def initialize_pen_injection(self, visual_mode: InjectedInputVisualizationMode, /) -> None: ...
    def initialize_touch_injection(self, visual_mode: InjectedInputVisualizationMode, /) -> None: ...
    def inject_gamepad_input(self, input: typing.Optional[InjectedInputGamepadInfo], /) -> None: ...
    def inject_keyboard_input(self, input: typing.Iterable[InjectedInputKeyboardInfo], /) -> None: ...
    def inject_mouse_input(self, input: typing.Iterable[InjectedInputMouseInfo], /) -> None: ...
    def inject_pen_input(self, input: typing.Optional[InjectedInputPenInfo], /) -> None: ...
    def inject_shortcut(self, shortcut: InjectedInputShortcut, /) -> None: ...
    def inject_touch_input(self, input: typing.Iterable[InjectedInputTouchInfo], /) -> None: ...
    @staticmethod
    def try_create() -> typing.Optional[InputInjector]: ...
    @staticmethod
    def try_create_for_app_broadcast_only() -> typing.Optional[InputInjector]: ...
    def uninitialize_gamepad_injection(self) -> None: ...
    def uninitialize_pen_injection(self) -> None: ...
    def uninitialize_touch_injection(self) -> None: ...

