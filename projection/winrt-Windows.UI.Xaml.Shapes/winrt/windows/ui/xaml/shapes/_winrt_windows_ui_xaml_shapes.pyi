# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.ui.composition
import winrt.windows.ui.xaml
import winrt.windows.ui.xaml.media

Self = typing.TypeVar('Self')

class Ellipse(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Ellipse: ...
    def __new__(cls: typing.Type[Ellipse]) -> Ellipse:...

class Line(winrt.system.Object):
    y2: winrt.system.Double
    y1: winrt.system.Double
    x2: winrt.system.Double
    x1: winrt.system.Double
    x1_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x2_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    y1_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    y2_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Line: ...
    def __new__(cls: typing.Type[Line]) -> Line:...

class Path(winrt.system.Object):
    data: typing.Optional[winrt.windows.ui.xaml.media.Geometry]
    data_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Path: ...
    def __new__(cls: typing.Type[Path]) -> Path:...

class Polygon(winrt.system.Object):
    points: typing.Optional[winrt.windows.ui.xaml.media.PointCollection]
    fill_rule: winrt.windows.ui.xaml.media.FillRule
    fill_rule_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    points_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Polygon: ...
    def __new__(cls: typing.Type[Polygon]) -> Polygon:...

class Polyline(winrt.system.Object):
    points: typing.Optional[winrt.windows.ui.xaml.media.PointCollection]
    fill_rule: winrt.windows.ui.xaml.media.FillRule
    fill_rule_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    points_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Polyline: ...
    def __new__(cls: typing.Type[Polyline]) -> Polyline:...

class Rectangle(winrt.system.Object):
    radius_y: winrt.system.Double
    radius_x: winrt.system.Double
    radius_x_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    radius_y_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Rectangle: ...
    def __new__(cls: typing.Type[Rectangle]) -> Rectangle:...

class Shape(winrt.system.Object):
    stroke_thickness: winrt.system.Double
    stroke_start_line_cap: winrt.windows.ui.xaml.media.PenLineCap
    stroke_miter_limit: winrt.system.Double
    stroke_line_join: winrt.windows.ui.xaml.media.PenLineJoin
    stroke_end_line_cap: winrt.windows.ui.xaml.media.PenLineCap
    stroke_dash_offset: winrt.system.Double
    stroke_dash_cap: winrt.windows.ui.xaml.media.PenLineCap
    stroke_dash_array: typing.Optional[winrt.windows.ui.xaml.media.DoubleCollection]
    stroke: typing.Optional[winrt.windows.ui.xaml.media.Brush]
    stretch: winrt.windows.ui.xaml.media.Stretch
    fill: typing.Optional[winrt.windows.ui.xaml.media.Brush]
    geometry_transform: typing.Optional[winrt.windows.ui.xaml.media.Transform]
    fill_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stretch_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_dash_array_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_dash_cap_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_dash_offset_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_end_line_cap_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_line_join_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_miter_limit_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_start_line_cap_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stroke_thickness_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Shape: ...
    def get_alpha_mask(self) -> typing.Optional[winrt.windows.ui.composition.CompositionBrush]: ...

