# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import enum
import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation.collections

class ProviderAdcChannelMode(enum.IntEnum):
    SINGLE_ENDED = 0
    DIFFERENTIAL = 1

Self = typing.TypeVar('Self')

class IAdcControllerProvider(winrt.system.Object):
    channel_count: winrt.system.Int32
    channel_mode: ProviderAdcChannelMode
    max_value: winrt.system.Int32
    min_value: winrt.system.Int32
    resolution_in_bits: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAdcControllerProvider: ...
    def acquire_channel(self, channel: winrt.system.Int32, /) -> None: ...
    def is_channel_mode_supported(self, channel_mode: ProviderAdcChannelMode, /) -> winrt.system.Boolean: ...
    def read_value(self, channel_number: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def release_channel(self, channel: winrt.system.Int32, /) -> None: ...

class IAdcProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAdcProvider: ...
    def get_controllers(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[IAdcControllerProvider]]: ...

