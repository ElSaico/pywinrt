# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.system.diagnostics
import winrt.windows.web.http

from . import HttpDiagnosticRequestInitiator

Self = typing.TypeVar('Self')

class HttpDiagnosticProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProvider: ...
    @staticmethod
    def create_from_process_diagnostic_info(process_diagnostic_info: typing.Optional[winrt.windows.system.diagnostics.ProcessDiagnosticInfo], /) -> typing.Optional[HttpDiagnosticProvider]: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def add_request_response_completed(self, handler: winrt.windows.foundation.TypedEventHandler[HttpDiagnosticProvider, HttpDiagnosticProviderRequestResponseCompletedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_request_response_completed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_request_sent(self, handler: winrt.windows.foundation.TypedEventHandler[HttpDiagnosticProvider, HttpDiagnosticProviderRequestSentEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_request_sent(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_response_received(self, handler: winrt.windows.foundation.TypedEventHandler[HttpDiagnosticProvider, HttpDiagnosticProviderResponseReceivedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_response_received(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class HttpDiagnosticProviderRequestResponseCompletedEventArgs(winrt.system.Object):
    activity_id: uuid.UUID
    initiator: HttpDiagnosticRequestInitiator
    process_id: winrt.system.UInt32
    requested_uri: typing.Optional[winrt.windows.foundation.Uri]
    source_locations: typing.Optional[winrt.windows.foundation.collections.IVectorView[HttpDiagnosticSourceLocation]]
    thread_id: winrt.system.UInt32
    timestamps: typing.Optional[HttpDiagnosticProviderRequestResponseTimestamps]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderRequestResponseCompletedEventArgs: ...

class HttpDiagnosticProviderRequestResponseTimestamps(winrt.system.Object):
    cache_checked_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    connection_completed_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    connection_initiated_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    name_resolved_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    request_completed_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    request_sent_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    response_completed_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    response_received_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    ssl_negotiated_timestamp: typing.Optional[typing.Optional[datetime.datetime]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderRequestResponseTimestamps: ...

class HttpDiagnosticProviderRequestSentEventArgs(winrt.system.Object):
    activity_id: uuid.UUID
    initiator: HttpDiagnosticRequestInitiator
    message: typing.Optional[winrt.windows.web.http.HttpRequestMessage]
    process_id: winrt.system.UInt32
    source_locations: typing.Optional[winrt.windows.foundation.collections.IVectorView[HttpDiagnosticSourceLocation]]
    thread_id: winrt.system.UInt32
    timestamp: datetime.datetime
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderRequestSentEventArgs: ...

class HttpDiagnosticProviderResponseReceivedEventArgs(winrt.system.Object):
    activity_id: uuid.UUID
    message: typing.Optional[winrt.windows.web.http.HttpResponseMessage]
    timestamp: datetime.datetime
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderResponseReceivedEventArgs: ...

class HttpDiagnosticSourceLocation(winrt.system.Object):
    column_number: winrt.system.UInt64
    line_number: winrt.system.UInt64
    source_uri: typing.Optional[winrt.windows.foundation.Uri]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticSourceLocation: ...

