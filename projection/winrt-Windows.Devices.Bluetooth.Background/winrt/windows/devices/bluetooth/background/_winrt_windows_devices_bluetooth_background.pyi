# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.devices.bluetooth
import winrt.windows.devices.bluetooth.advertisement
import winrt.windows.devices.bluetooth.genericattributeprofile
import winrt.windows.devices.bluetooth.rfcomm
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.networking.sockets
import winrt.windows.storage.streams

from . import BluetoothEventTriggeringMode

Self = typing.TypeVar('Self')

class BluetoothLEAdvertisementPublisherTriggerDetails(winrt.system.Object):
    error: winrt.windows.devices.bluetooth.BluetoothError
    status: winrt.windows.devices.bluetooth.advertisement.BluetoothLEAdvertisementPublisherStatus
    selected_transmit_power_level_in_d_bm: typing.Optional[typing.Optional[winrt.system.Int16]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BluetoothLEAdvertisementPublisherTriggerDetails: ...

class BluetoothLEAdvertisementWatcherTriggerDetails(winrt.system.Object):
    advertisements: typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.devices.bluetooth.advertisement.BluetoothLEAdvertisementReceivedEventArgs]]
    error: winrt.windows.devices.bluetooth.BluetoothError
    signal_strength_filter: typing.Optional[winrt.windows.devices.bluetooth.BluetoothSignalStrengthFilter]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BluetoothLEAdvertisementWatcherTriggerDetails: ...

class GattCharacteristicNotificationTriggerDetails(winrt.system.Object):
    characteristic: typing.Optional[winrt.windows.devices.bluetooth.genericattributeprofile.GattCharacteristic]
    value: typing.Optional[winrt.windows.storage.streams.IBuffer]
    error: winrt.windows.devices.bluetooth.BluetoothError
    event_triggering_mode: BluetoothEventTriggeringMode
    value_changed_events: typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.devices.bluetooth.genericattributeprofile.GattValueChangedEventArgs]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GattCharacteristicNotificationTriggerDetails: ...

class GattServiceProviderConnection(winrt.system.Object):
    service: typing.Optional[winrt.windows.devices.bluetooth.genericattributeprofile.GattLocalService]
    trigger_id: str
    all_services: typing.ClassVar[typing.Optional[winrt.windows.foundation.collections.IMapView[str, GattServiceProviderConnection]]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GattServiceProviderConnection: ...
    def start(self) -> None: ...

class GattServiceProviderTriggerDetails(winrt.system.Object):
    connection: typing.Optional[GattServiceProviderConnection]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GattServiceProviderTriggerDetails: ...

class RfcommConnectionTriggerDetails(winrt.system.Object):
    incoming: bool
    remote_device: typing.Optional[winrt.windows.devices.bluetooth.BluetoothDevice]
    socket: typing.Optional[winrt.windows.networking.sockets.StreamSocket]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RfcommConnectionTriggerDetails: ...

class RfcommInboundConnectionInformation(winrt.system.Object):
    service_capabilities: winrt.windows.devices.bluetooth.BluetoothServiceCapabilities
    sdp_record: typing.Optional[winrt.windows.storage.streams.IBuffer]
    local_service_id: typing.Optional[winrt.windows.devices.bluetooth.rfcomm.RfcommServiceId]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RfcommInboundConnectionInformation: ...

class RfcommOutboundConnectionInformation(winrt.system.Object):
    remote_service_id: typing.Optional[winrt.windows.devices.bluetooth.rfcomm.RfcommServiceId]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RfcommOutboundConnectionInformation: ...

