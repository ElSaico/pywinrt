# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.storage.streams
import winrt.windows.ui.xaml
import winrt.windows.ui.xaml.interop

Self = typing.TypeVar('Self')

class XamlBinaryWriterErrorInformation:
    input_stream_index: winrt.system.UInt32
    line_number: winrt.system.UInt32
    line_position: winrt.system.UInt32
    def __new__(cls: typing.Type[XamlBinaryWriterErrorInformation], input_stream_index: winrt.system.UInt32, line_number: winrt.system.UInt32, line_position: winrt.system.UInt32) -> XamlBinaryWriterErrorInformation: ...

class XmlnsDefinition:
    xml_namespace: str
    namespace: str
    def __new__(cls: typing.Type[XmlnsDefinition], xml_namespace: str, namespace: str) -> XmlnsDefinition: ...

class MarkupExtension(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MarkupExtension: ...
    def __new__(cls: typing.Type[MarkupExtension]) -> MarkupExtension:...
    def provide_value(self) -> typing.Optional[winrt.system.Object]: ...

class XamlBinaryWriter(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XamlBinaryWriter: ...
    @staticmethod
    def write(input_streams: winrt.windows.foundation.collections.IVector[winrt.windows.storage.streams.IRandomAccessStream], output_streams: winrt.windows.foundation.collections.IVector[winrt.windows.storage.streams.IRandomAccessStream], xaml_metadata_provider: typing.Optional[IXamlMetadataProvider], /) -> XamlBinaryWriterErrorInformation: ...

class XamlBindingHelper(winrt.system.Object):
    data_template_component_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XamlBindingHelper: ...
    @staticmethod
    def convert_value(type: winrt.windows.ui.xaml.interop.TypeName, value: typing.Optional[winrt.system.Object], /) -> typing.Optional[winrt.system.Object]: ...
    @staticmethod
    def get_data_template_component(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> typing.Optional[IDataTemplateComponent]: ...
    @staticmethod
    def resume_rendering(target: typing.Optional[winrt.windows.ui.xaml.UIElement], /) -> None: ...
    @staticmethod
    def set_data_template_component(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: typing.Optional[IDataTemplateComponent], /) -> None: ...
    @staticmethod
    def set_property_from_boolean(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: bool, /) -> None: ...
    @staticmethod
    def set_property_from_byte(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.UInt8, /) -> None: ...
    @staticmethod
    def set_property_from_char16(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.Char16, /) -> None: ...
    @staticmethod
    def set_property_from_date_time(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: datetime.datetime, /) -> None: ...
    @staticmethod
    def set_property_from_double(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.Double, /) -> None: ...
    @staticmethod
    def set_property_from_int32(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def set_property_from_int64(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.Int64, /) -> None: ...
    @staticmethod
    def set_property_from_object(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    @staticmethod
    def set_property_from_point(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.windows.foundation.Point, /) -> None: ...
    @staticmethod
    def set_property_from_rect(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.windows.foundation.Rect, /) -> None: ...
    @staticmethod
    def set_property_from_single(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.Single, /) -> None: ...
    @staticmethod
    def set_property_from_size(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.windows.foundation.Size, /) -> None: ...
    @staticmethod
    def set_property_from_string(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: str, /) -> None: ...
    @staticmethod
    def set_property_from_time_span(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: datetime.timedelta, /) -> None: ...
    @staticmethod
    def set_property_from_uint32(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.UInt32, /) -> None: ...
    @staticmethod
    def set_property_from_uint64(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: winrt.system.UInt64, /) -> None: ...
    @staticmethod
    def set_property_from_uri(dependency_object: typing.Optional[winrt.system.Object], property_to_set: typing.Optional[winrt.windows.ui.xaml.DependencyProperty], value: typing.Optional[winrt.windows.foundation.Uri], /) -> None: ...
    @staticmethod
    def suspend_rendering(target: typing.Optional[winrt.windows.ui.xaml.UIElement], /) -> None: ...

class XamlMarkupHelper(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XamlMarkupHelper: ...
    @staticmethod
    def unload_object(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> None: ...

class XamlReader(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XamlReader: ...
    @staticmethod
    def load(xaml: str, /) -> typing.Optional[winrt.system.Object]: ...
    @staticmethod
    def load_with_initial_template_validation(xaml: str, /) -> typing.Optional[winrt.system.Object]: ...

class IComponentConnector(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IComponentConnector: ...
    def connect(self, connection_id: winrt.system.Int32, target: typing.Optional[winrt.system.Object], /) -> None: ...

class IComponentConnector2(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IComponentConnector2: ...
    def get_binding_connector(self, connection_id: winrt.system.Int32, target: typing.Optional[winrt.system.Object], /) -> typing.Optional[IComponentConnector]: ...

class IDataTemplateComponent(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IDataTemplateComponent: ...
    def process_bindings(self, item: typing.Optional[winrt.system.Object], item_index: winrt.system.Int32, phase: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def recycle(self) -> None: ...

class IXamlBindScopeDiagnostics(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXamlBindScopeDiagnostics: ...
    def disable(self, line_number: winrt.system.Int32, column_number: winrt.system.Int32, /) -> None: ...

class IXamlMember(winrt.system.Object):
    is_attachable: bool
    is_dependency_property: bool
    is_read_only: bool
    name: str
    target_type: typing.Optional[IXamlType]
    type: typing.Optional[IXamlType]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXamlMember: ...
    def get_value(self, instance: typing.Optional[winrt.system.Object], /) -> typing.Optional[winrt.system.Object]: ...
    def set_value(self, instance: typing.Optional[winrt.system.Object], value: typing.Optional[winrt.system.Object], /) -> None: ...

class IXamlMetadataProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXamlMetadataProvider: ...
    def get_xaml_type(self, type: winrt.windows.ui.xaml.interop.TypeName, /) -> typing.Optional[IXamlType]: ...
    def get_xmlns_definitions(self) -> XmlnsDefinition: ...

class IXamlType(winrt.system.Object):
    base_type: typing.Optional[IXamlType]
    content_property: typing.Optional[IXamlMember]
    full_name: str
    is_array: bool
    is_bindable: bool
    is_collection: bool
    is_constructible: bool
    is_dictionary: bool
    is_markup_extension: bool
    item_type: typing.Optional[IXamlType]
    key_type: typing.Optional[IXamlType]
    underlying_type: winrt.windows.ui.xaml.interop.TypeName
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXamlType: ...
    def activate_instance(self) -> typing.Optional[winrt.system.Object]: ...
    def add_to_map(self, instance: typing.Optional[winrt.system.Object], key: typing.Optional[winrt.system.Object], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def add_to_vector(self, instance: typing.Optional[winrt.system.Object], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def create_from_string(self, value: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_member(self, name: str, /) -> typing.Optional[IXamlMember]: ...
    def run_initializer(self) -> None: ...

class IXamlType2(winrt.system.Object):
    boxed_type: typing.Optional[IXamlType]
    base_type: typing.Optional[IXamlType]
    content_property: typing.Optional[IXamlMember]
    full_name: str
    is_array: bool
    is_bindable: bool
    is_collection: bool
    is_constructible: bool
    is_dictionary: bool
    is_markup_extension: bool
    item_type: typing.Optional[IXamlType]
    key_type: typing.Optional[IXamlType]
    underlying_type: winrt.windows.ui.xaml.interop.TypeName
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXamlType2: ...
    def activate_instance(self) -> typing.Optional[winrt.system.Object]: ...
    def add_to_map(self, instance: typing.Optional[winrt.system.Object], key: typing.Optional[winrt.system.Object], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def add_to_vector(self, instance: typing.Optional[winrt.system.Object], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def create_from_string(self, value: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_member(self, name: str, /) -> typing.Optional[IXamlMember]: ...
    def run_initializer(self) -> None: ...

