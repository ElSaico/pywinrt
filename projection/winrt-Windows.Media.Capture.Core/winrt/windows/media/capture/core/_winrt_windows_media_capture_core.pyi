# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation
import winrt.windows.media.capture

Self = typing.TypeVar('Self')

class VariablePhotoCapturedEventArgs(winrt.system.Object):
    capture_time_offset: datetime.timedelta
    captured_frame_control_values: typing.Optional[winrt.windows.media.capture.CapturedFrameControlValues]
    frame: typing.Optional[winrt.windows.media.capture.CapturedFrame]
    used_frame_controller_index: typing.Optional[typing.Optional[winrt.system.UInt32]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VariablePhotoCapturedEventArgs: ...

class VariablePhotoSequenceCapture(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VariablePhotoSequenceCapture: ...
    def finish_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def start_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def stop_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def update_settings_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def add_photo_captured(self, handler: winrt.windows.foundation.TypedEventHandler[VariablePhotoSequenceCapture, VariablePhotoCapturedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_photo_captured(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_stopped(self, handler: winrt.windows.foundation.TypedEventHandler[VariablePhotoSequenceCapture, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_stopped(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

