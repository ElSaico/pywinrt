# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt.system
import winrt.windows.applicationmodel.appointments
import winrt.windows.applicationmodel.email
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.storage.streams

from . import AccessoryNotificationType, CalendarChangedEvent, PhoneCallAudioEndpoint, PhoneCallDirection, PhoneCallState, PhoneCallTransport, PhoneLineRegistrationState, PhoneMediaType, PhoneNotificationType, PlaybackCapability, PlaybackCommand, PlaybackStatus, ReminderState, VibrateState

Self = typing.TypeVar('Self')

class AccessoryManager(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AccessoryManager: ...
    @typing.overload
    @staticmethod
    def accept_phone_call(phone_call_id: winrt.system.UInt32, /) -> None: ...
    @typing.overload
    @staticmethod
    def accept_phone_call(phone_call_id: winrt.system.UInt32, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    @typing.overload
    @staticmethod
    def accept_phone_call_with_video(phone_call_id: winrt.system.UInt32, /) -> None: ...
    @typing.overload
    @staticmethod
    def accept_phone_call_with_video(phone_call_id: winrt.system.UInt32, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    @staticmethod
    def clear_toast(instance_id: str, /) -> None: ...
    @staticmethod
    def decrease_volume(step: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def disable_all_accessory_notification_types() -> None: ...
    @staticmethod
    def disable_email_notification_email_account(email_account: str, /) -> None: ...
    @staticmethod
    def disable_notifications_for_application(app_id: str, /) -> None: ...
    @staticmethod
    def dismiss_alarm(alarm_id: _uuid.UUID, /) -> None: ...
    @staticmethod
    def dismiss_alarm_by_instance_id(instance_id: str, /) -> None: ...
    @staticmethod
    def dismiss_reminder(reminder_id: _uuid.UUID, /) -> None: ...
    @staticmethod
    def dismiss_reminder_by_instance_id(instance_id: str, /) -> None: ...
    @staticmethod
    def enable_accessory_notification_types(accessory_notification_types: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def enable_email_notification_email_account(email_account: str, /) -> None: ...
    @staticmethod
    def enable_email_notification_folder_filter(email_account: str, folders: winrt.windows.foundation.collections.IVectorView[str], /) -> None: ...
    @staticmethod
    def enable_notifications_for_application(app_id: str, /) -> None: ...
    @staticmethod
    def end_phone_call(phone_call_id: winrt.system.UInt32, /) -> None: ...
    @staticmethod
    def get_all_email_accounts() -> typing.Optional[winrt.windows.foundation.collections.IVectorView[EmailAccountInfo]]: ...
    @staticmethod
    def get_app_icon(app_id: str, /) -> typing.Optional[winrt.windows.storage.streams.IRandomAccessStreamReference]: ...
    @staticmethod
    def get_apps() -> typing.Optional[winrt.windows.foundation.collections.IMapView[str, AppNotificationInfo]]: ...
    @staticmethod
    def get_enabled_accessory_notification_types() -> winrt.system.Int32: ...
    @staticmethod
    def get_folders(email_account: str, /) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[EmailFolderInfo]]: ...
    @staticmethod
    def get_media_metadata() -> typing.Optional[MediaMetadata]: ...
    @staticmethod
    def get_next_trigger_details() -> typing.Optional[IAccessoryNotificationTriggerDetails]: ...
    @staticmethod
    def get_phone_line_details(phone_line: _uuid.UUID, /) -> typing.Optional[PhoneLineDetails]: ...
    @staticmethod
    def get_user_consent() -> bool: ...
    @staticmethod
    def hold_phone_call(phone_call_id: winrt.system.UInt32, hold_call: bool, /) -> None: ...
    @staticmethod
    def increase_volume(step: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def is_notification_enabled_for_application(app_id: str, /) -> bool: ...
    @typing.overload
    @staticmethod
    def make_phone_call(phone_line: _uuid.UUID, phone_number: str, /) -> None: ...
    @typing.overload
    @staticmethod
    def make_phone_call(phone_line: _uuid.UUID, phone_number: str, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    @typing.overload
    @staticmethod
    def make_phone_call_with_video(phone_line: _uuid.UUID, phone_number: str, /) -> None: ...
    @typing.overload
    @staticmethod
    def make_phone_call_with_video(phone_line: _uuid.UUID, phone_number: str, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    @staticmethod
    def perform_media_playback_command(command: PlaybackCommand, /) -> None: ...
    @staticmethod
    def process_trigger_details(p_details: typing.Optional[IAccessoryNotificationTriggerDetails], /) -> None: ...
    @staticmethod
    def register_accessory_app() -> str: ...
    @typing.overload
    @staticmethod
    def reject_phone_call(phone_call_id: winrt.system.UInt32, /) -> None: ...
    @typing.overload
    @staticmethod
    def reject_phone_call(phone_call_id: winrt.system.UInt32, text_response_i_d: winrt.system.UInt32, /) -> None: ...
    @staticmethod
    def ring_device() -> None: ...
    @staticmethod
    def set_mute(mute: bool, /) -> None: ...
    @staticmethod
    def set_ringer_vibrate(ringer: bool, vibrate: bool, /) -> None: ...
    @typing.overload
    @staticmethod
    def snooze_alarm(alarm_id: _uuid.UUID, /) -> None: ...
    @typing.overload
    @staticmethod
    def snooze_alarm(alarm_id: _uuid.UUID, time_span: datetime.timedelta, /) -> None: ...
    @staticmethod
    def snooze_alarm_by_instance_id(instance_id: str, /) -> None: ...
    @typing.overload
    @staticmethod
    def snooze_reminder(reminder_id: _uuid.UUID, /) -> None: ...
    @typing.overload
    @staticmethod
    def snooze_reminder(reminder_id: _uuid.UUID, time_span: datetime.timedelta, /) -> None: ...
    @staticmethod
    def snooze_reminder_by_instance_id(instance_id: str, /) -> None: ...
    @staticmethod
    def swap_phone_calls(phone_call_id_to_hold: winrt.system.UInt32, phone_call_id_on_hold: winrt.system.UInt32, /) -> None: ...
    @staticmethod
    def update_email_read_status(message_entry_id: typing.Optional[BinaryId], is_read: bool, /) -> None: ...
    phone_mute: typing.ClassVar[bool]
    phone_call_audio_endpoint: typing.ClassVar[PhoneCallAudioEndpoint]
    battery_saver_state: typing.ClassVar[bool]
    do_not_disturb_enabled: typing.ClassVar[bool]
    driving_mode_enabled: typing.ClassVar[bool]
    media_playback_capabilities: typing.ClassVar[PlaybackCapability]
    media_playback_status: typing.ClassVar[PlaybackStatus]
    phone_line_details: typing.ClassVar[typing.Optional[winrt.windows.foundation.collections.IVectorView[PhoneLineDetails]]]
    is_phone_pin_locked: typing.ClassVar[bool]
    speed_dial_list: typing.ClassVar[typing.Optional[winrt.windows.foundation.collections.IVectorView[SpeedDialEntry]]]
    volume_info: typing.ClassVar[typing.Optional[VolumeInfo]]

class AlarmNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AlarmNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def alarm_id(self) -> _uuid.UUID: ...
    @_property
    def reminder_state(self) -> ReminderState: ...
    @_property
    def timestamp(self) -> datetime.datetime: ...
    @_property
    def title(self) -> str: ...
    @_property
    def instance_id(self) -> str: ...

class AppNotificationInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppNotificationInfo: ...
    @_property
    def id(self) -> str: ...
    @_property
    def name(self) -> str: ...

class BinaryId(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BinaryId: ...
    @_property
    def id(self) -> winrt.system.UInt8: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...

class CalendarChangedNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CalendarChangedNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def event_type(self) -> CalendarChangedEvent: ...
    @_property
    def item_id(self) -> str: ...

class CortanaTileNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CortanaTileNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def content(self) -> str: ...
    @_property
    def emphasized_text(self) -> str: ...
    @_property
    def large_content1(self) -> str: ...
    @_property
    def large_content2(self) -> str: ...
    @_property
    def non_wrapped_small_content1(self) -> str: ...
    @_property
    def non_wrapped_small_content2(self) -> str: ...
    @_property
    def non_wrapped_small_content3(self) -> str: ...
    @_property
    def non_wrapped_small_content4(self) -> str: ...
    @_property
    def source(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...

class EmailAccountInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailAccountInfo: ...
    @_property
    def display_name(self) -> str: ...
    @_property
    def is_notification_enabled(self) -> bool: ...

class EmailFolderInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailFolderInfo: ...
    @_property
    def display_name(self) -> str: ...
    @_property
    def is_notification_enabled(self) -> bool: ...

class EmailNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def account_name(self) -> str: ...
    @_property
    def email_message(self) -> typing.Optional[winrt.windows.applicationmodel.email.EmailMessage]: ...
    @_property
    def parent_folder_name(self) -> str: ...
    @_property
    def sender_address(self) -> str: ...
    @_property
    def sender_name(self) -> str: ...
    @_property
    def timestamp(self) -> datetime.datetime: ...
    @_property
    def message_entry_id(self) -> typing.Optional[BinaryId]: ...

class EmailReadNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailReadNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def account_name(self) -> str: ...
    @_property
    def is_read(self) -> bool: ...
    @_property
    def message_entry_id(self) -> typing.Optional[BinaryId]: ...
    @_property
    def parent_folder_name(self) -> str: ...

class MediaControlsTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaControlsTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def media_metadata(self) -> typing.Optional[MediaMetadata]: ...
    @_property
    def playback_status(self) -> PlaybackStatus: ...

class MediaMetadata(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaMetadata: ...
    @_property
    def album(self) -> str: ...
    @_property
    def artist(self) -> str: ...
    @_property
    def duration(self) -> datetime.timedelta: ...
    @_property
    def subtitle(self) -> str: ...
    @_property
    def thumbnail(self) -> typing.Optional[winrt.windows.storage.streams.IRandomAccessStreamReference]: ...
    @_property
    def title(self) -> str: ...
    @_property
    def track(self) -> winrt.system.UInt32: ...

class PhoneCallDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PhoneCallDetails: ...
    @_property
    def call_direction(self) -> PhoneCallDirection: ...
    @_property
    def call_id(self) -> winrt.system.UInt32: ...
    @_property
    def call_media_type(self) -> PhoneMediaType: ...
    @_property
    def call_transport(self) -> PhoneCallTransport: ...
    @_property
    def conference_call_id(self) -> winrt.system.UInt32: ...
    @_property
    def contact_name(self) -> str: ...
    @_property
    def end_time(self) -> datetime.datetime: ...
    @_property
    def phone_line(self) -> _uuid.UUID: ...
    @_property
    def phone_number(self) -> str: ...
    @_property
    def preset_text_responses(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[TextResponse]]: ...
    @_property
    def start_time(self) -> datetime.datetime: ...
    @_property
    def state(self) -> PhoneCallState: ...

class PhoneLineDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PhoneLineDetails: ...
    @_property
    def default_outgoing_line(self) -> bool: ...
    @_property
    def display_name(self) -> str: ...
    @_property
    def line_id(self) -> _uuid.UUID: ...
    @_property
    def line_number(self) -> str: ...
    @_property
    def registration_state(self) -> PhoneLineRegistrationState: ...
    @_property
    def voicemail_count(self) -> winrt.system.UInt32: ...
    @_property
    def missed_call_count(self) -> winrt.system.UInt32: ...

class PhoneNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PhoneNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def call_details(self) -> typing.Optional[PhoneCallDetails]: ...
    @_property
    def phone_line_changed_id(self) -> _uuid.UUID: ...
    @_property
    def phone_notification_type(self) -> PhoneNotificationType: ...

class ReminderNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ReminderNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def appointment(self) -> typing.Optional[winrt.windows.applicationmodel.appointments.Appointment]: ...
    @_property
    def description(self) -> str: ...
    @_property
    def details(self) -> str: ...
    @_property
    def reminder_id(self) -> _uuid.UUID: ...
    @_property
    def reminder_state(self) -> ReminderState: ...
    @_property
    def timestamp(self) -> datetime.datetime: ...
    @_property
    def title(self) -> str: ...
    @_property
    def instance_id(self) -> str: ...

class SpeedDialEntry(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpeedDialEntry: ...
    @_property
    def contact_name(self) -> str: ...
    @_property
    def number_type(self) -> str: ...
    @_property
    def phone_number(self) -> str: ...

class TextResponse(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextResponse: ...
    @_property
    def content(self) -> str: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...

class ToastNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToastNotificationTriggerDetails: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def time_created(self) -> datetime.datetime: ...
    @_property
    def suppress_popup(self) -> bool: ...
    @_property
    def text1(self) -> str: ...
    @_property
    def text2(self) -> str: ...
    @_property
    def text3(self) -> str: ...
    @_property
    def text4(self) -> str: ...
    @_property
    def instance_id(self) -> str: ...

class VolumeInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VolumeInfo: ...
    @_property
    def call_volume(self) -> winrt.system.UInt32: ...
    @_property
    def is_muted(self) -> bool: ...
    @_property
    def is_vibrate_enabled(self) -> VibrateState: ...
    @_property
    def media_volume(self) -> winrt.system.UInt32: ...
    @_property
    def system_volume(self) -> winrt.system.UInt32: ...

class IAccessoryNotificationTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAccessoryNotificationTriggerDetails: ...
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    @_property
    def app_display_name(self) -> str: ...
    @_property
    def app_id(self) -> str: ...
    @_property
    def started_processing(self) -> bool: ...
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    @_property
    def time_created(self) -> datetime.datetime: ...

