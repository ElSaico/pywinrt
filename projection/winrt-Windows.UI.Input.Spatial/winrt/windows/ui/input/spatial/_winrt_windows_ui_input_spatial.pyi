# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.devices.haptics
import winrt.windows.devices.power
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.foundation.numerics
import winrt.windows.perception
import winrt.windows.perception.people
import winrt.windows.perception.spatial
import winrt.windows.storage.streams

from . import SpatialGestureSettings, SpatialInteractionPressKind, SpatialInteractionSourceHandedness, SpatialInteractionSourceKind, SpatialInteractionSourcePositionAccuracy

Self = typing.TypeVar('Self')

class SpatialGestureRecognizer(winrt.system.Object):
    gesture_settings: SpatialGestureSettings
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialGestureRecognizer: ...
    def __new__(cls: typing.Type[SpatialGestureRecognizer], settings: SpatialGestureSettings) -> SpatialGestureRecognizer:...
    def cancel_pending_gestures(self) -> None: ...
    def capture_interaction(self, interaction: typing.Optional[SpatialInteraction], /) -> None: ...
    def try_set_gesture_settings(self, settings: SpatialGestureSettings, /) -> winrt.system.Boolean: ...
    def add_hold_canceled(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialHoldCanceledEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_hold_canceled(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_hold_completed(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialHoldCompletedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_hold_completed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_hold_started(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialHoldStartedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_hold_started(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_canceled(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationCanceledEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_manipulation_canceled(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_completed(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationCompletedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_manipulation_completed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_started(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationStartedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_manipulation_started(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_updated(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationUpdatedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_manipulation_updated(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_canceled(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationCanceledEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_navigation_canceled(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_completed(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationCompletedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_navigation_completed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_started(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationStartedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_navigation_started(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_updated(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationUpdatedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_navigation_updated(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_recognition_ended(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialRecognitionEndedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_recognition_ended(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_recognition_started(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialRecognitionStartedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_recognition_started(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_tapped(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialTappedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_tapped(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class SpatialHoldCanceledEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialHoldCanceledEventArgs: ...

class SpatialHoldCompletedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialHoldCompletedEventArgs: ...

class SpatialHoldStartedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialHoldStartedEventArgs: ...
    def try_get_pointer_pose(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialPointerPose]: ...

class SpatialInteraction(winrt.system.Object):
    source_state: typing.Optional[SpatialInteractionSourceState]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteraction: ...

class SpatialInteractionController(winrt.system.Object):
    has_thumbstick: winrt.system.Boolean
    has_touchpad: winrt.system.Boolean
    product_id: winrt.system.UInt16
    simple_haptics_controller: typing.Optional[winrt.windows.devices.haptics.SimpleHapticsController]
    vendor_id: winrt.system.UInt16
    version: winrt.system.UInt16
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionController: ...
    def try_get_battery_report(self) -> typing.Optional[winrt.windows.devices.power.BatteryReport]: ...
    def try_get_renderable_model_async(self) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.streams.IRandomAccessStreamWithContentType]: ...

class SpatialInteractionControllerProperties(winrt.system.Object):
    is_thumbstick_pressed: winrt.system.Boolean
    is_touchpad_pressed: winrt.system.Boolean
    is_touchpad_touched: winrt.system.Boolean
    thumbstick_x: winrt.system.Double
    thumbstick_y: winrt.system.Double
    touchpad_x: winrt.system.Double
    touchpad_y: winrt.system.Double
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionControllerProperties: ...

class SpatialInteractionDetectedEventArgs(winrt.system.Object):
    interaction: typing.Optional[SpatialInteraction]
    interaction_source_kind: SpatialInteractionSourceKind
    interaction_source: typing.Optional[SpatialInteractionSource]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionDetectedEventArgs: ...
    def try_get_pointer_pose(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialPointerPose]: ...

class SpatialInteractionManager(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionManager: ...
    def get_detected_sources_at_timestamp(self, time_stamp: typing.Optional[winrt.windows.perception.PerceptionTimestamp], /) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[SpatialInteractionSourceState]]: ...
    @staticmethod
    def get_for_current_view() -> typing.Optional[SpatialInteractionManager]: ...
    @staticmethod
    def is_source_kind_supported(kind: SpatialInteractionSourceKind, /) -> winrt.system.Boolean: ...
    def add_interaction_detected(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionDetectedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_interaction_detected(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_source_detected(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_source_detected(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_source_lost(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_source_lost(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_source_pressed(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_source_pressed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_source_released(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_source_released(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_source_updated(self, handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_source_updated(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class SpatialInteractionSource(winrt.system.Object):
    id: winrt.system.UInt32
    kind: SpatialInteractionSourceKind
    controller: typing.Optional[SpatialInteractionController]
    is_grasp_supported: winrt.system.Boolean
    is_menu_supported: winrt.system.Boolean
    is_pointing_supported: winrt.system.Boolean
    handedness: SpatialInteractionSourceHandedness
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionSource: ...
    def try_create_hand_mesh_observer(self) -> typing.Optional[winrt.windows.perception.people.HandMeshObserver]: ...
    def try_create_hand_mesh_observer_async(self) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.perception.people.HandMeshObserver]: ...
    def try_get_state_at_timestamp(self, timestamp: typing.Optional[winrt.windows.perception.PerceptionTimestamp], /) -> typing.Optional[SpatialInteractionSourceState]: ...

class SpatialInteractionSourceEventArgs(winrt.system.Object):
    state: typing.Optional[SpatialInteractionSourceState]
    press_kind: SpatialInteractionPressKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionSourceEventArgs: ...

class SpatialInteractionSourceLocation(winrt.system.Object):
    position: typing.Optional[typing.Optional[winrt.windows.foundation.numerics.Vector3]]
    velocity: typing.Optional[typing.Optional[winrt.windows.foundation.numerics.Vector3]]
    orientation: typing.Optional[typing.Optional[winrt.windows.foundation.numerics.Quaternion]]
    angular_velocity: typing.Optional[typing.Optional[winrt.windows.foundation.numerics.Vector3]]
    position_accuracy: SpatialInteractionSourcePositionAccuracy
    source_pointer_pose: typing.Optional[SpatialPointerInteractionSourcePose]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionSourceLocation: ...

class SpatialInteractionSourceProperties(winrt.system.Object):
    source_loss_risk: winrt.system.Double
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionSourceProperties: ...
    def try_get_location(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialInteractionSourceLocation]: ...
    def try_get_source_loss_mitigation_direction(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[typing.Optional[winrt.windows.foundation.numerics.Vector3]]: ...

class SpatialInteractionSourceState(winrt.system.Object):
    is_pressed: winrt.system.Boolean
    properties: typing.Optional[SpatialInteractionSourceProperties]
    source: typing.Optional[SpatialInteractionSource]
    timestamp: typing.Optional[winrt.windows.perception.PerceptionTimestamp]
    controller_properties: typing.Optional[SpatialInteractionControllerProperties]
    is_grasped: winrt.system.Boolean
    is_menu_pressed: winrt.system.Boolean
    is_select_pressed: winrt.system.Boolean
    select_pressed_value: winrt.system.Double
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialInteractionSourceState: ...
    def try_get_hand_pose(self) -> typing.Optional[winrt.windows.perception.people.HandPose]: ...
    def try_get_pointer_pose(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialPointerPose]: ...

class SpatialManipulationCanceledEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialManipulationCanceledEventArgs: ...

class SpatialManipulationCompletedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialManipulationCompletedEventArgs: ...
    def try_get_cumulative_delta(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialManipulationDelta]: ...

class SpatialManipulationDelta(winrt.system.Object):
    translation: winrt.windows.foundation.numerics.Vector3
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialManipulationDelta: ...

class SpatialManipulationStartedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialManipulationStartedEventArgs: ...
    def try_get_pointer_pose(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialPointerPose]: ...

class SpatialManipulationUpdatedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialManipulationUpdatedEventArgs: ...
    def try_get_cumulative_delta(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialManipulationDelta]: ...

class SpatialNavigationCanceledEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialNavigationCanceledEventArgs: ...

class SpatialNavigationCompletedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    normalized_offset: winrt.windows.foundation.numerics.Vector3
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialNavigationCompletedEventArgs: ...

class SpatialNavigationStartedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    is_navigating_x: winrt.system.Boolean
    is_navigating_y: winrt.system.Boolean
    is_navigating_z: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialNavigationStartedEventArgs: ...
    def try_get_pointer_pose(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialPointerPose]: ...

class SpatialNavigationUpdatedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    normalized_offset: winrt.windows.foundation.numerics.Vector3
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialNavigationUpdatedEventArgs: ...

class SpatialPointerInteractionSourcePose(winrt.system.Object):
    forward_direction: winrt.windows.foundation.numerics.Vector3
    position: winrt.windows.foundation.numerics.Vector3
    up_direction: winrt.windows.foundation.numerics.Vector3
    orientation: winrt.windows.foundation.numerics.Quaternion
    position_accuracy: SpatialInteractionSourcePositionAccuracy
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialPointerInteractionSourcePose: ...

class SpatialPointerPose(winrt.system.Object):
    head: typing.Optional[winrt.windows.perception.people.HeadPose]
    timestamp: typing.Optional[winrt.windows.perception.PerceptionTimestamp]
    eyes: typing.Optional[winrt.windows.perception.people.EyesPose]
    is_head_captured_by_system: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialPointerPose: ...
    @staticmethod
    def try_get_at_timestamp(coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], timestamp: typing.Optional[winrt.windows.perception.PerceptionTimestamp], /) -> typing.Optional[SpatialPointerPose]: ...
    def try_get_interaction_source_pose(self, source: typing.Optional[SpatialInteractionSource], /) -> typing.Optional[SpatialPointerInteractionSourcePose]: ...

class SpatialRecognitionEndedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialRecognitionEndedEventArgs: ...

class SpatialRecognitionStartedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialRecognitionStartedEventArgs: ...
    def is_gesture_possible(self, gesture: SpatialGestureSettings, /) -> winrt.system.Boolean: ...
    def try_get_pointer_pose(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialPointerPose]: ...

class SpatialTappedEventArgs(winrt.system.Object):
    interaction_source_kind: SpatialInteractionSourceKind
    tap_count: winrt.system.UInt32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpatialTappedEventArgs: ...
    def try_get_pointer_pose(self, coordinate_system: typing.Optional[winrt.windows.perception.spatial.SpatialCoordinateSystem], /) -> typing.Optional[SpatialPointerPose]: ...

