# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.devices.adc.provider
import winrt.windows.devices.gpio.provider
import winrt.windows.devices.i2c.provider
import winrt.windows.devices.pwm.provider
import winrt.windows.devices.spi.provider

Self = typing.TypeVar('Self')

class LowLevelDevicesAggregateProvider(winrt.system.Object):
    adc_controller_provider: typing.Optional[winrt.windows.devices.adc.provider.IAdcControllerProvider]
    gpio_controller_provider: typing.Optional[winrt.windows.devices.gpio.provider.IGpioControllerProvider]
    i2c_controller_provider: typing.Optional[winrt.windows.devices.i2c.provider.II2cControllerProvider]
    pwm_controller_provider: typing.Optional[winrt.windows.devices.pwm.provider.IPwmControllerProvider]
    spi_controller_provider: typing.Optional[winrt.windows.devices.spi.provider.ISpiControllerProvider]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LowLevelDevicesAggregateProvider: ...
    def __new__(cls: typing.Type[LowLevelDevicesAggregateProvider], adc: typing.Optional[winrt.windows.devices.adc.provider.IAdcControllerProvider], pwm: typing.Optional[winrt.windows.devices.pwm.provider.IPwmControllerProvider], gpio: typing.Optional[winrt.windows.devices.gpio.provider.IGpioControllerProvider], i2c: typing.Optional[winrt.windows.devices.i2c.provider.II2cControllerProvider], spi: typing.Optional[winrt.windows.devices.spi.provider.ISpiControllerProvider]) -> LowLevelDevicesAggregateProvider:...

class LowLevelDevicesController(winrt.system.Object):
    default_provider: typing.ClassVar[typing.Optional[ILowLevelDevicesAggregateProvider]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LowLevelDevicesController: ...

class ILowLevelDevicesAggregateProvider(winrt.system.Object):
    adc_controller_provider: typing.Optional[winrt.windows.devices.adc.provider.IAdcControllerProvider]
    gpio_controller_provider: typing.Optional[winrt.windows.devices.gpio.provider.IGpioControllerProvider]
    i2c_controller_provider: typing.Optional[winrt.windows.devices.i2c.provider.II2cControllerProvider]
    pwm_controller_provider: typing.Optional[winrt.windows.devices.pwm.provider.IPwmControllerProvider]
    spi_controller_provider: typing.Optional[winrt.windows.devices.spi.provider.ISpiControllerProvider]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ILowLevelDevicesAggregateProvider: ...

