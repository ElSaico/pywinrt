# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.devices.enumeration
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.networking
import winrt.windows.networking.sockets
import winrt.windows.storage.streams

from . import WiFiDirectServiceAdvertisementStatus, WiFiDirectServiceConfigurationMethod, WiFiDirectServiceError, WiFiDirectServiceIPProtocol, WiFiDirectServiceSessionErrorStatus, WiFiDirectServiceSessionStatus, WiFiDirectServiceStatus

Self = typing.TypeVar('Self')

class WiFiDirectService(winrt.system.Object):
    session_info: typing.Optional[winrt.windows.storage.streams.IBuffer]
    prefer_group_owner_mode: winrt.system.Boolean
    remote_service_info: typing.Optional[winrt.windows.storage.streams.IBuffer]
    service_error: WiFiDirectServiceError
    supported_configuration_methods: typing.Optional[winrt.windows.foundation.collections.IVectorView[WiFiDirectServiceConfigurationMethod]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectService: ...
    @typing.overload
    def connect_async(self) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectServiceSession]: ...
    @typing.overload
    def connect_async(self, pin: str, /) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectServiceSession]: ...
    @staticmethod
    def from_id_async(device_id: str, /) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectService]: ...
    def get_provisioning_info_async(self, selected_configuration_method: WiFiDirectServiceConfigurationMethod, /) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectServiceProvisioningInfo]: ...
    @typing.overload
    @staticmethod
    def get_selector(service_name: str, /) -> str: ...
    @typing.overload
    @staticmethod
    def get_selector(service_name: str, service_info_filter: typing.Optional[winrt.windows.storage.streams.IBuffer], /) -> str: ...
    def add_session_deferred(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectService, WiFiDirectServiceSessionDeferredEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_session_deferred(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class WiFiDirectServiceAdvertiser(winrt.system.Object):
    service_status: WiFiDirectServiceStatus
    service_info: typing.Optional[winrt.windows.storage.streams.IBuffer]
    prefer_group_owner_mode: winrt.system.Boolean
    deferred_session_info: typing.Optional[winrt.windows.storage.streams.IBuffer]
    custom_service_status_code: winrt.system.UInt32
    auto_accept_session: winrt.system.Boolean
    service_error: WiFiDirectServiceError
    preferred_configuration_methods: typing.Optional[winrt.windows.foundation.collections.IVector[WiFiDirectServiceConfigurationMethod]]
    service_name: str
    service_name_prefixes: typing.Optional[winrt.windows.foundation.collections.IVector[str]]
    advertisement_status: WiFiDirectServiceAdvertisementStatus
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceAdvertiser: ...
    def __new__(cls: typing.Type[WiFiDirectServiceAdvertiser], service_name: str) -> WiFiDirectServiceAdvertiser:...
    @typing.overload
    def connect_async(self, device_info: typing.Optional[winrt.windows.devices.enumeration.DeviceInformation], /) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectServiceSession]: ...
    @typing.overload
    def connect_async(self, device_info: typing.Optional[winrt.windows.devices.enumeration.DeviceInformation], pin: str, /) -> winrt.windows.foundation.IAsyncOperation[WiFiDirectServiceSession]: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def add_advertisement_status_changed(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectServiceAdvertiser, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_advertisement_status_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_auto_accept_session_connected(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectServiceAdvertiser, WiFiDirectServiceAutoAcceptSessionConnectedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_auto_accept_session_connected(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_session_requested(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectServiceAdvertiser, WiFiDirectServiceSessionRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_session_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class WiFiDirectServiceAutoAcceptSessionConnectedEventArgs(winrt.system.Object):
    session: typing.Optional[WiFiDirectServiceSession]
    session_info: typing.Optional[winrt.windows.storage.streams.IBuffer]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceAutoAcceptSessionConnectedEventArgs: ...

class WiFiDirectServiceProvisioningInfo(winrt.system.Object):
    is_group_formation_needed: winrt.system.Boolean
    selected_configuration_method: WiFiDirectServiceConfigurationMethod
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceProvisioningInfo: ...

class WiFiDirectServiceRemotePortAddedEventArgs(winrt.system.Object):
    endpoint_pairs: typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.networking.EndpointPair]]
    protocol: WiFiDirectServiceIPProtocol
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceRemotePortAddedEventArgs: ...

class WiFiDirectServiceSession(winrt.system.Object):
    advertisement_id: winrt.system.UInt32
    error_status: WiFiDirectServiceSessionErrorStatus
    service_address: str
    service_name: str
    session_address: str
    session_id: winrt.system.UInt32
    status: WiFiDirectServiceSessionStatus
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceSession: ...
    def add_datagram_socket_async(self, value: typing.Optional[winrt.windows.networking.sockets.DatagramSocket], /) -> winrt.windows.foundation.IAsyncAction: ...
    def add_stream_socket_listener_async(self, value: typing.Optional[winrt.windows.networking.sockets.StreamSocketListener], /) -> winrt.windows.foundation.IAsyncAction: ...
    def close(self) -> None: ...
    def get_connection_endpoint_pairs(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.networking.EndpointPair]]: ...
    def add_remote_port_added(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectServiceSession, WiFiDirectServiceRemotePortAddedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_remote_port_added(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_session_status_changed(self, handler: winrt.windows.foundation.TypedEventHandler[WiFiDirectServiceSession, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_session_status_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class WiFiDirectServiceSessionDeferredEventArgs(winrt.system.Object):
    deferred_session_info: typing.Optional[winrt.windows.storage.streams.IBuffer]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceSessionDeferredEventArgs: ...

class WiFiDirectServiceSessionRequest(winrt.system.Object):
    device_information: typing.Optional[winrt.windows.devices.enumeration.DeviceInformation]
    provisioning_info: typing.Optional[WiFiDirectServiceProvisioningInfo]
    session_info: typing.Optional[winrt.windows.storage.streams.IBuffer]
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceSessionRequest: ...
    def close(self) -> None: ...

class WiFiDirectServiceSessionRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WiFiDirectServiceSessionRequestedEventArgs: ...
    def get_session_request(self) -> typing.Optional[WiFiDirectServiceSessionRequest]: ...

