# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid

import winrt.system
import winrt.windows.foundation.collections

Self = typing.TypeVar('Self')

class CharacterGrouping(winrt.system.Object):
    first: str
    label: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CharacterGrouping: ...

class CharacterGroupings(winrt.system.Object, typing.Sequence[CharacterGrouping]):
    size: winrt.system.UInt32
    def __len__(self) -> int: ...
    @typing.overload
    def __getitem__(self, index: int) -> CharacterGrouping: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[CharacterGrouping]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CharacterGroupings: ...
    @typing.overload
    def __new__(cls: typing.Type[CharacterGroupings], language: str) -> CharacterGroupings:...
    @typing.overload
    def __new__(cls: typing.Type[CharacterGroupings]) -> CharacterGroupings:...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[CharacterGrouping]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[CharacterGrouping]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[CharacterGrouping], /) -> winrt.system.UInt32: ...
    def index_of(self, value: typing.Optional[CharacterGrouping], /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def lookup(self, text: str, /) -> str: ...

