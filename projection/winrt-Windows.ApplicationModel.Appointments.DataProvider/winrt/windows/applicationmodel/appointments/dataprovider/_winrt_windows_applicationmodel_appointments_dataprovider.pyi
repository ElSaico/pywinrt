# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.applicationmodel.appointments
import winrt.windows.foundation
import winrt.windows.foundation.collections

Self = typing.TypeVar('Self')

class AppointmentCalendarCancelMeetingRequest(winrt.system.Object):
    appointment_calendar_local_id: str
    appointment_local_id: str
    appointment_original_start_time: typing.Optional[typing.Optional[datetime.datetime]]
    comment: str
    notify_invitees: bool
    subject: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarCancelMeetingRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class AppointmentCalendarCancelMeetingRequestEventArgs(winrt.system.Object):
    request: typing.Optional[AppointmentCalendarCancelMeetingRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarCancelMeetingRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AppointmentCalendarCreateOrUpdateAppointmentRequest(winrt.system.Object):
    appointment: typing.Optional[winrt.windows.applicationmodel.appointments.Appointment]
    appointment_calendar_local_id: str
    changed_properties: typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]
    notify_invitees: bool
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarCreateOrUpdateAppointmentRequest: ...
    def report_completed_async(self, created_or_updated_appointment: typing.Optional[winrt.windows.applicationmodel.appointments.Appointment], /) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs(winrt.system.Object):
    request: typing.Optional[AppointmentCalendarCreateOrUpdateAppointmentRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AppointmentCalendarForwardMeetingRequest(winrt.system.Object):
    appointment_calendar_local_id: str
    appointment_local_id: str
    appointment_original_start_time: typing.Optional[typing.Optional[datetime.datetime]]
    comment: str
    forward_header: str
    invitees: typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.applicationmodel.appointments.AppointmentInvitee]]
    subject: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarForwardMeetingRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class AppointmentCalendarForwardMeetingRequestEventArgs(winrt.system.Object):
    request: typing.Optional[AppointmentCalendarForwardMeetingRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarForwardMeetingRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AppointmentCalendarProposeNewTimeForMeetingRequest(winrt.system.Object):
    appointment_calendar_local_id: str
    appointment_local_id: str
    appointment_original_start_time: typing.Optional[typing.Optional[datetime.datetime]]
    comment: str
    new_duration: datetime.timedelta
    new_start_time: datetime.datetime
    subject: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarProposeNewTimeForMeetingRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs(winrt.system.Object):
    request: typing.Optional[AppointmentCalendarProposeNewTimeForMeetingRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AppointmentCalendarSyncManagerSyncRequest(winrt.system.Object):
    appointment_calendar_local_id: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarSyncManagerSyncRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class AppointmentCalendarSyncManagerSyncRequestEventArgs(winrt.system.Object):
    request: typing.Optional[AppointmentCalendarSyncManagerSyncRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarSyncManagerSyncRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AppointmentCalendarUpdateMeetingResponseRequest(winrt.system.Object):
    appointment_calendar_local_id: str
    appointment_local_id: str
    appointment_original_start_time: typing.Optional[typing.Optional[datetime.datetime]]
    comment: str
    response: winrt.windows.applicationmodel.appointments.AppointmentParticipantResponse
    send_update: bool
    subject: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarUpdateMeetingResponseRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class AppointmentCalendarUpdateMeetingResponseRequestEventArgs(winrt.system.Object):
    request: typing.Optional[AppointmentCalendarUpdateMeetingResponseRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentCalendarUpdateMeetingResponseRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AppointmentDataProviderConnection(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentDataProviderConnection: ...
    def start(self) -> None: ...
    def add_cancel_meeting_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AppointmentDataProviderConnection, AppointmentCalendarCancelMeetingRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_cancel_meeting_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_create_or_update_appointment_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AppointmentDataProviderConnection, AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_create_or_update_appointment_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_forward_meeting_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AppointmentDataProviderConnection, AppointmentCalendarForwardMeetingRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_forward_meeting_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_propose_new_time_for_meeting_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AppointmentDataProviderConnection, AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_propose_new_time_for_meeting_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_sync_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AppointmentDataProviderConnection, AppointmentCalendarSyncManagerSyncRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_sync_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_update_meeting_response_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AppointmentDataProviderConnection, AppointmentCalendarUpdateMeetingResponseRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_update_meeting_response_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class AppointmentDataProviderTriggerDetails(winrt.system.Object):
    connection: typing.Optional[AppointmentDataProviderConnection]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentDataProviderTriggerDetails: ...

