# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import enum
import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.ui.core
import winrt.windows.ui.text
import winrt.windows.ui.xaml
import winrt.windows.ui.xaml.input
import winrt.windows.ui.xaml.media

class LogicalDirection(enum.IntEnum):
    BACKWARD = 0
    FORWARD = 1

class UnderlineStyle(enum.IntEnum):
    NONE = 0
    SINGLE = 1

Self = typing.TypeVar('Self')

class TextRange:
    start_index: winrt.system.Int32
    length: winrt.system.Int32
    def __new__(cls: typing.Type[TextRange], start_index: winrt.system.Int32, length: winrt.system.Int32) -> TextRange: ...

class Block(winrt.system.Object):
    text_alignment: winrt.windows.ui.xaml.TextAlignment
    margin: winrt.windows.ui.xaml.Thickness
    line_stacking_strategy: winrt.windows.ui.xaml.LineStackingStrategy
    line_height: winrt.system.Double
    horizontal_text_alignment: winrt.windows.ui.xaml.TextAlignment
    line_height_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    line_stacking_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    margin_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    text_alignment_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    horizontal_text_alignment_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Block: ...

class BlockCollection(winrt.system.Object, typing.MutableSequence[Block]):
    size: winrt.system.UInt32
    def __len__(self) -> int: ...
    @typing.overload
    def __getitem__(self, index: int) -> Block: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Block]: ...
    def insert(self, index: int, value: Block) -> None: ...
    @typing.overload
    def __delitem__(self, index: int) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: int, value: Block) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Block]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BlockCollection: ...
    def append(self, value: typing.Optional[Block], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[Block]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[Block]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[Block], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[Block]]: ...
    def index_of(self, value: typing.Optional[Block], /) -> typing.Tuple[winrt.system.Boolean, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[Block], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[Block], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[Block], /) -> None: ...

class Bold(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Bold: ...
    def __new__(cls: typing.Type[Bold]) -> Bold:...

class ContactContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactContentLinkProvider: ...
    def __new__(cls: typing.Type[ContactContentLinkProvider]) -> ContactContentLinkProvider:...

class ContentLink(winrt.system.Object):
    x_y_focus_up_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    x_y_focus_up: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    x_y_focus_right_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    x_y_focus_right: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    x_y_focus_left_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    x_y_focus_left: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    x_y_focus_down_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    x_y_focus_down: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    tab_index: winrt.system.Int32
    is_tab_stop: winrt.system.Boolean
    info: typing.Optional[winrt.windows.ui.text.ContentLinkInfo]
    element_sound_mode: winrt.windows.ui.xaml.ElementSoundMode
    cursor: winrt.windows.ui.core.CoreCursorType
    background: typing.Optional[winrt.windows.ui.xaml.media.Brush]
    focus_state: winrt.windows.ui.xaml.FocusState
    background_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    cursor_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    element_sound_mode_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    focus_state_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    is_tab_stop_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    tab_index_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_down_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_down_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_left_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_left_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_right_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_right_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_up_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_up_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLink: ...
    def __new__(cls: typing.Type[ContentLink]) -> ContentLink:...
    def focus(self, value: winrt.windows.ui.xaml.FocusState, /) -> winrt.system.Boolean: ...
    def add_got_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_got_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_invoked(self, handler: winrt.windows.foundation.TypedEventHandler[ContentLink, ContentLinkInvokedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_invoked(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class ContentLinkInvokedEventArgs(winrt.system.Object):
    handled: winrt.system.Boolean
    content_link_info: typing.Optional[winrt.windows.ui.text.ContentLinkInfo]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkInvokedEventArgs: ...

class ContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkProvider: ...

class ContentLinkProviderCollection(winrt.system.Object, typing.MutableSequence[ContentLinkProvider]):
    size: winrt.system.UInt32
    def __len__(self) -> int: ...
    @typing.overload
    def __getitem__(self, index: int) -> ContentLinkProvider: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ContentLinkProvider]: ...
    def insert(self, index: int, value: ContentLinkProvider) -> None: ...
    @typing.overload
    def __delitem__(self, index: int) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: int, value: ContentLinkProvider) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ContentLinkProvider]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkProviderCollection: ...
    def __new__(cls: typing.Type[ContentLinkProviderCollection]) -> ContentLinkProviderCollection:...
    def append(self, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[ContentLinkProvider]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[ContentLinkProvider]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[ContentLinkProvider], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[ContentLinkProvider]]: ...
    def index_of(self, value: typing.Optional[ContentLinkProvider], /) -> typing.Tuple[winrt.system.Boolean, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[ContentLinkProvider], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[ContentLinkProvider], /) -> None: ...

class Glyphs(winrt.system.Object):
    unicode_string: str
    style_simulations: winrt.windows.ui.xaml.media.StyleSimulations
    origin_y: winrt.system.Double
    origin_x: winrt.system.Double
    indices: str
    font_uri: typing.Optional[winrt.windows.foundation.Uri]
    font_rendering_em_size: winrt.system.Double
    fill: typing.Optional[winrt.windows.ui.xaml.media.Brush]
    is_color_font_enabled: winrt.system.Boolean
    color_font_palette_index: winrt.system.Int32
    fill_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    font_rendering_em_size_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    font_uri_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    indices_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    origin_x_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    origin_y_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    style_simulations_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    unicode_string_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    color_font_palette_index_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    is_color_font_enabled_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Glyphs: ...
    def __new__(cls: typing.Type[Glyphs]) -> Glyphs:...

class Hyperlink(winrt.system.Object):
    navigate_uri: typing.Optional[winrt.windows.foundation.Uri]
    underline_style: UnderlineStyle
    x_y_focus_up: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    x_y_focus_right: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    x_y_focus_left: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    x_y_focus_down: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    element_sound_mode: winrt.windows.ui.xaml.ElementSoundMode
    x_y_focus_up_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    x_y_focus_right_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    x_y_focus_left_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    x_y_focus_down_navigation_strategy: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy
    focus_state: winrt.windows.ui.xaml.FocusState
    tab_index: winrt.system.Int32
    is_tab_stop: winrt.system.Boolean
    navigate_uri_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    underline_style_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    element_sound_mode_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_down_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_left_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_right_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_up_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    focus_state_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_down_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_left_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_right_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    x_y_focus_up_navigation_strategy_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    is_tab_stop_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    tab_index_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Hyperlink: ...
    def __new__(cls: typing.Type[Hyperlink]) -> Hyperlink:...
    def focus(self, value: winrt.windows.ui.xaml.FocusState, /) -> winrt.system.Boolean: ...
    def add_click(self, handler: winrt.windows.foundation.TypedEventHandler[Hyperlink, HyperlinkClickEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_click(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_got_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_got_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class HyperlinkClickEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HyperlinkClickEventArgs: ...

class Inline(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Inline: ...

class InlineCollection(winrt.system.Object, typing.MutableSequence[Inline]):
    size: winrt.system.UInt32
    def __len__(self) -> int: ...
    @typing.overload
    def __getitem__(self, index: int) -> Inline: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Inline]: ...
    def insert(self, index: int, value: Inline) -> None: ...
    @typing.overload
    def __delitem__(self, index: int) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: int, value: Inline) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Inline]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InlineCollection: ...
    def append(self, value: typing.Optional[Inline], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[Inline]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[Inline]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[Inline], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[Inline]]: ...
    def index_of(self, value: typing.Optional[Inline], /) -> typing.Tuple[winrt.system.Boolean, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[Inline], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[Inline], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[Inline], /) -> None: ...

class InlineUIContainer(winrt.system.Object):
    child: typing.Optional[winrt.windows.ui.xaml.UIElement]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InlineUIContainer: ...
    def __new__(cls: typing.Type[InlineUIContainer]) -> InlineUIContainer:...

class Italic(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Italic: ...
    def __new__(cls: typing.Type[Italic]) -> Italic:...

class LineBreak(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LineBreak: ...
    def __new__(cls: typing.Type[LineBreak]) -> LineBreak:...

class Paragraph(winrt.system.Object):
    text_indent: winrt.system.Double
    inlines: typing.Optional[InlineCollection]
    text_indent_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Paragraph: ...
    def __new__(cls: typing.Type[Paragraph]) -> Paragraph:...

class PlaceContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PlaceContentLinkProvider: ...
    def __new__(cls: typing.Type[PlaceContentLinkProvider]) -> PlaceContentLinkProvider:...

class Run(winrt.system.Object):
    text: str
    flow_direction: winrt.windows.ui.xaml.FlowDirection
    flow_direction_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Run: ...
    def __new__(cls: typing.Type[Run]) -> Run:...

class Span(winrt.system.Object):
    inlines: typing.Optional[InlineCollection]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Span: ...
    def __new__(cls: typing.Type[Span]) -> Span:...

class TextElement(winrt.system.Object):
    language: str
    foreground: typing.Optional[winrt.windows.ui.xaml.media.Brush]
    font_weight: winrt.windows.ui.text.FontWeight
    font_style: winrt.windows.ui.text.FontStyle
    font_stretch: winrt.windows.ui.text.FontStretch
    font_size: winrt.system.Double
    font_family: typing.Optional[winrt.windows.ui.xaml.media.FontFamily]
    character_spacing: winrt.system.Int32
    content_end: typing.Optional[TextPointer]
    content_start: typing.Optional[TextPointer]
    element_end: typing.Optional[TextPointer]
    element_start: typing.Optional[TextPointer]
    name: str
    is_text_scale_factor_enabled: winrt.system.Boolean
    exit_display_mode_on_access_key_invoked: winrt.system.Boolean
    allow_focus_on_interaction: winrt.system.Boolean
    access_key: str
    text_decorations: winrt.windows.ui.text.TextDecorations
    key_tip_vertical_offset: winrt.system.Double
    key_tip_placement_mode: winrt.windows.ui.xaml.input.KeyTipPlacementMode
    key_tip_horizontal_offset: winrt.system.Double
    is_access_key_scope: winrt.system.Boolean
    access_key_scope_owner: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    xaml_root: typing.Optional[winrt.windows.ui.xaml.XamlRoot]
    character_spacing_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    font_family_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    font_size_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    font_stretch_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    font_style_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    font_weight_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    foreground_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    language_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    is_text_scale_factor_enabled_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    access_key_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    allow_focus_on_interaction_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    exit_display_mode_on_access_key_invoked_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    access_key_scope_owner_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    is_access_key_scope_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    key_tip_horizontal_offset_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    key_tip_placement_mode_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    key_tip_vertical_offset_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    text_decorations_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextElement: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def on_disconnect_visual_children(self) -> None: ...
    def add_access_key_display_dismissed(self, handler: winrt.windows.foundation.TypedEventHandler[TextElement, winrt.windows.ui.xaml.input.AccessKeyDisplayDismissedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: winrt.windows.foundation.TypedEventHandler[TextElement, winrt.windows.ui.xaml.input.AccessKeyDisplayRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: winrt.windows.foundation.TypedEventHandler[TextElement, winrt.windows.ui.xaml.input.AccessKeyInvokedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class TextHighlighter(winrt.system.Object):
    foreground: typing.Optional[winrt.windows.ui.xaml.media.Brush]
    background: typing.Optional[winrt.windows.ui.xaml.media.Brush]
    ranges: typing.Optional[winrt.windows.foundation.collections.IVector[TextRange]]
    background_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    foreground_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextHighlighter: ...
    def __new__(cls: typing.Type[TextHighlighter]) -> TextHighlighter:...

class TextHighlighterBase(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextHighlighterBase: ...

class TextPointer(winrt.system.Object):
    logical_direction: LogicalDirection
    offset: winrt.system.Int32
    parent: typing.Optional[winrt.windows.ui.xaml.DependencyObject]
    visual_parent: typing.Optional[winrt.windows.ui.xaml.FrameworkElement]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextPointer: ...
    def get_character_rect(self, direction: LogicalDirection, /) -> winrt.windows.foundation.Rect: ...
    def get_position_at_offset(self, offset: winrt.system.Int32, direction: LogicalDirection, /) -> typing.Optional[TextPointer]: ...

class Typography(winrt.system.Object):
    annotation_alternates_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    capital_spacing_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    capitals_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    case_sensitive_forms_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    contextual_alternates_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    contextual_ligatures_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    contextual_swashes_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    discretionary_ligatures_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    east_asian_expert_forms_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    east_asian_language_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    east_asian_widths_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    fraction_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    historical_forms_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    historical_ligatures_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    kerning_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    mathematical_greek_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    numeral_alignment_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    numeral_style_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    slashed_zero_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    standard_ligatures_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    standard_swashes_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_alternates_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set10_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set11_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set12_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set13_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set14_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set15_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set16_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set17_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set18_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set19_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set1_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set20_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set2_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set3_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set4_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set5_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set6_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set7_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set8_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    stylistic_set9_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    variants_property: typing.ClassVar[typing.Optional[winrt.windows.ui.xaml.DependencyProperty]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Typography: ...
    @staticmethod
    def get_annotation_alternates(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    @staticmethod
    def get_capital_spacing(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_capitals(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontCapitals: ...
    @staticmethod
    def get_case_sensitive_forms(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_contextual_alternates(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_contextual_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_contextual_swashes(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    @staticmethod
    def get_discretionary_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_east_asian_expert_forms(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_east_asian_language(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontEastAsianLanguage: ...
    @staticmethod
    def get_east_asian_widths(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontEastAsianWidths: ...
    @staticmethod
    def get_fraction(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontFraction: ...
    @staticmethod
    def get_historical_forms(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_historical_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_kerning(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_mathematical_greek(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_numeral_alignment(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontNumeralAlignment: ...
    @staticmethod
    def get_numeral_style(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontNumeralStyle: ...
    @staticmethod
    def get_slashed_zero(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_standard_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_standard_swashes(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    @staticmethod
    def get_stylistic_alternates(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    @staticmethod
    def get_stylistic_set1(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set10(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set11(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set12(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set13(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set14(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set15(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set16(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set17(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set18(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set19(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set2(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set20(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set3(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set4(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set5(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set6(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set7(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set8(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_stylistic_set9(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Boolean: ...
    @staticmethod
    def get_variants(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontVariants: ...
    @staticmethod
    def set_annotation_alternates(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def set_capital_spacing(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_capitals(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontCapitals, /) -> None: ...
    @staticmethod
    def set_case_sensitive_forms(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_contextual_alternates(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_contextual_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_contextual_swashes(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def set_discretionary_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_east_asian_expert_forms(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_east_asian_language(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontEastAsianLanguage, /) -> None: ...
    @staticmethod
    def set_east_asian_widths(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontEastAsianWidths, /) -> None: ...
    @staticmethod
    def set_fraction(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontFraction, /) -> None: ...
    @staticmethod
    def set_historical_forms(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_historical_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_kerning(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_mathematical_greek(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_numeral_alignment(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontNumeralAlignment, /) -> None: ...
    @staticmethod
    def set_numeral_style(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontNumeralStyle, /) -> None: ...
    @staticmethod
    def set_slashed_zero(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_standard_ligatures(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_standard_swashes(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def set_stylistic_alternates(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    @staticmethod
    def set_stylistic_set1(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set10(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set11(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set12(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set13(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set14(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set15(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set16(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set17(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set18(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set19(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set2(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set20(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set3(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set4(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set5(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set6(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set7(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set8(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_stylistic_set9(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Boolean, /) -> None: ...
    @staticmethod
    def set_variants(element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontVariants, /) -> None: ...

class Underline(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Underline: ...
    def __new__(cls: typing.Type[Underline]) -> Underline:...

