# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid

import winrt.system
import winrt.windows.applicationmodel.activation
import winrt.windows.foundation
import winrt.windows.foundation.collections

from . import GameChatMessageOrigin, GameChatOverlayPosition

Self = typing.TypeVar('Self')

class GameBar(winrt.system.Object):
    is_input_redirected: typing.ClassVar[bool]
    visible: typing.ClassVar[bool]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GameBar: ...
    @staticmethod
    def add_is_input_redirected_changed(handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    @staticmethod
    def remove_is_input_redirected_changed(token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @staticmethod
    def add_visibility_changed(handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    @staticmethod
    def remove_visibility_changed(token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class GameChatMessageReceivedEventArgs(winrt.system.Object):
    app_display_name: str
    app_id: str
    message: str
    origin: GameChatMessageOrigin
    sender_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GameChatMessageReceivedEventArgs: ...

class GameChatOverlay(winrt.system.Object):
    desired_position: GameChatOverlayPosition
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GameChatOverlay: ...
    def add_message(self, sender: str, message: str, origin: GameChatMessageOrigin, /) -> None: ...
    @staticmethod
    def get_default() -> typing.Optional[GameChatOverlay]: ...

class GameChatOverlayMessageSource(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GameChatOverlayMessageSource: ...
    def __new__(cls: typing.Type[GameChatOverlayMessageSource]) -> GameChatOverlayMessageSource:...
    def set_delay_before_closing_after_message_received(self, value: datetime.timedelta, /) -> None: ...
    def add_message_received(self, handler: winrt.windows.foundation.TypedEventHandler[GameChatOverlayMessageSource, GameChatMessageReceivedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_message_received(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class GameUIProviderActivatedEventArgs(winrt.system.Object):
    kind: winrt.windows.applicationmodel.activation.ActivationKind
    previous_execution_state: winrt.windows.applicationmodel.activation.ApplicationExecutionState
    splash_screen: typing.Optional[winrt.windows.applicationmodel.activation.SplashScreen]
    game_u_i_args: typing.Optional[winrt.windows.foundation.collections.ValueSet]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GameUIProviderActivatedEventArgs: ...
    def report_completed(self, results: typing.Optional[winrt.windows.foundation.collections.ValueSet], /) -> None: ...

