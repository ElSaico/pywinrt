# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.foundation.collections

from . import PlatformDiagnosticActionState, PlatformDiagnosticEscalationType, PlatformDiagnosticEventBufferLatencies, PlatformDiagnosticTracePriority, PlatformDiagnosticTraceSlotState, PlatformDiagnosticTraceSlotType

Self = typing.TypeVar('Self')

class PlatformDiagnosticActions(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PlatformDiagnosticActions: ...
    @staticmethod
    def download_latest_settings_for_namespace(partner: str, feature: str, is_scenario_namespace: winrt.system.Boolean, download_over_costed_network: winrt.system.Boolean, download_over_battery: winrt.system.Boolean, /) -> PlatformDiagnosticActionState: ...
    @staticmethod
    def force_upload(latency: PlatformDiagnosticEventBufferLatencies, upload_over_costed_network: winrt.system.Boolean, upload_over_battery: winrt.system.Boolean, /) -> PlatformDiagnosticActionState: ...
    @staticmethod
    def get_active_scenario_list() -> typing.Optional[winrt.windows.foundation.collections.IVectorView[uuid.UUID]]: ...
    @staticmethod
    def get_active_trace_runtime(slot_type: PlatformDiagnosticTraceSlotType, /) -> typing.Optional[PlatformDiagnosticTraceRuntimeInfo]: ...
    @staticmethod
    def get_known_trace_list(slot_type: PlatformDiagnosticTraceSlotType, /) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[PlatformDiagnosticTraceInfo]]: ...
    @staticmethod
    def is_scenario_enabled(scenario_id: uuid.UUID, /) -> winrt.system.Boolean: ...
    @staticmethod
    def is_trace_running(slot_type: PlatformDiagnosticTraceSlotType, scenario_id: uuid.UUID, trace_profile_hash: winrt.system.UInt64, /) -> PlatformDiagnosticTraceSlotState: ...
    @staticmethod
    def try_escalate_scenario(scenario_id: uuid.UUID, escalation_type: PlatformDiagnosticEscalationType, output_directory: str, timestamp_output_directory: winrt.system.Boolean, force_escalation_upload: winrt.system.Boolean, triggers: winrt.windows.foundation.collections.IMapView[str, str], /) -> winrt.system.Boolean: ...

class PlatformDiagnosticTraceInfo(winrt.system.Object):
    is_auto_logger: winrt.system.Boolean
    is_exclusive: winrt.system.Boolean
    max_trace_duration_file_time: winrt.system.Int64
    priority: PlatformDiagnosticTracePriority
    profile_hash: winrt.system.UInt64
    scenario_id: uuid.UUID
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PlatformDiagnosticTraceInfo: ...

class PlatformDiagnosticTraceRuntimeInfo(winrt.system.Object):
    etw_runtime_file_time: winrt.system.Int64
    runtime_file_time: winrt.system.Int64
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PlatformDiagnosticTraceRuntimeInfo: ...

