# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import enum
import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation
import winrt.windows.ui
import winrt.windows.ui.xaml.automation
import winrt.windows.ui.xaml.automation.peers
import winrt.windows.ui.xaml.automation.text

Self = typing.TypeVar('Self')

class IRawElementProviderSimple(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IRawElementProviderSimple: ...

class IAnnotationProvider(winrt.system.Object):
    annotation_type_id: winrt.system.Int32
    annotation_type_name: str
    author: str
    date_time: str
    target: typing.Optional[IRawElementProviderSimple]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAnnotationProvider: ...

class ICustomNavigationProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICustomNavigationProvider: ...
    def navigate_custom(self, direction: winrt.windows.ui.xaml.automation.peers.AutomationNavigationDirection, /) -> typing.Optional[winrt.system.Object]: ...

class IDockProvider(winrt.system.Object):
    dock_position: winrt.windows.ui.xaml.automation.DockPosition
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IDockProvider: ...
    def set_dock_position(self, dock_position: winrt.windows.ui.xaml.automation.DockPosition, /) -> None: ...

class IDragProvider(winrt.system.Object):
    drop_effect: str
    drop_effects: str
    is_grabbed: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IDragProvider: ...
    def get_grabbed_items(self) -> typing.Optional[IRawElementProviderSimple]: ...

class IDropTargetProvider(winrt.system.Object):
    drop_effect: str
    drop_effects: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IDropTargetProvider: ...

class IExpandCollapseProvider(winrt.system.Object):
    expand_collapse_state: winrt.windows.ui.xaml.automation.ExpandCollapseState
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IExpandCollapseProvider: ...
    def collapse(self) -> None: ...
    def expand(self) -> None: ...

class IGridItemProvider(winrt.system.Object):
    column: winrt.system.Int32
    column_span: winrt.system.Int32
    containing_grid: typing.Optional[IRawElementProviderSimple]
    row: winrt.system.Int32
    row_span: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IGridItemProvider: ...

class IGridProvider(winrt.system.Object):
    column_count: winrt.system.Int32
    row_count: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IGridProvider: ...
    def get_item(self, row: winrt.system.Int32, column: winrt.system.Int32, /) -> typing.Optional[IRawElementProviderSimple]: ...

class IInvokeProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IInvokeProvider: ...
    def invoke(self) -> None: ...

class IItemContainerProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IItemContainerProvider: ...
    def find_item_by_property(self, start_after: typing.Optional[IRawElementProviderSimple], automation_property: typing.Optional[winrt.windows.ui.xaml.automation.AutomationProperty], value: typing.Optional[winrt.system.Object], /) -> typing.Optional[IRawElementProviderSimple]: ...

class IMultipleViewProvider(winrt.system.Object):
    current_view: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IMultipleViewProvider: ...
    def get_supported_views(self) -> winrt.system.Int32: ...
    def get_view_name(self, view_id: winrt.system.Int32, /) -> str: ...
    def set_current_view(self, view_id: winrt.system.Int32, /) -> None: ...

class IObjectModelProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IObjectModelProvider: ...
    def get_underlying_object_model(self) -> typing.Optional[winrt.system.Object]: ...

class IRangeValueProvider(winrt.system.Object):
    is_read_only: winrt.system.Boolean
    large_change: winrt.system.Double
    maximum: winrt.system.Double
    minimum: winrt.system.Double
    small_change: winrt.system.Double
    value: winrt.system.Double
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IRangeValueProvider: ...
    def set_value(self, value: winrt.system.Double, /) -> None: ...

class IScrollItemProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IScrollItemProvider: ...
    def scroll_into_view(self) -> None: ...

class IScrollProvider(winrt.system.Object):
    horizontal_scroll_percent: winrt.system.Double
    horizontal_view_size: winrt.system.Double
    horizontally_scrollable: winrt.system.Boolean
    vertical_scroll_percent: winrt.system.Double
    vertical_view_size: winrt.system.Double
    vertically_scrollable: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IScrollProvider: ...
    def scroll(self, horizontal_amount: winrt.windows.ui.xaml.automation.ScrollAmount, vertical_amount: winrt.windows.ui.xaml.automation.ScrollAmount, /) -> None: ...
    def set_scroll_percent(self, horizontal_percent: winrt.system.Double, vertical_percent: winrt.system.Double, /) -> None: ...

class ISelectionItemProvider(winrt.system.Object):
    is_selected: winrt.system.Boolean
    selection_container: typing.Optional[IRawElementProviderSimple]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISelectionItemProvider: ...
    def add_to_selection(self) -> None: ...
    def remove_from_selection(self) -> None: ...
    def select(self) -> None: ...

class ISelectionProvider(winrt.system.Object):
    can_select_multiple: winrt.system.Boolean
    is_selection_required: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISelectionProvider: ...
    def get_selection(self) -> typing.Optional[IRawElementProviderSimple]: ...

class ISpreadsheetItemProvider(winrt.system.Object):
    formula: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISpreadsheetItemProvider: ...
    def get_annotation_objects(self) -> typing.Optional[IRawElementProviderSimple]: ...
    def get_annotation_types(self) -> winrt.windows.ui.xaml.automation.AnnotationType: ...

class ISpreadsheetProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISpreadsheetProvider: ...
    def get_item_by_name(self, name: str, /) -> typing.Optional[IRawElementProviderSimple]: ...

class IStylesProvider(winrt.system.Object):
    extended_properties: str
    fill_color: winrt.windows.ui.Color
    fill_pattern_color: winrt.windows.ui.Color
    fill_pattern_style: str
    shape: str
    style_id: winrt.system.Int32
    style_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IStylesProvider: ...

class ISynchronizedInputProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISynchronizedInputProvider: ...
    def cancel(self) -> None: ...
    def start_listening(self, input_type: winrt.windows.ui.xaml.automation.SynchronizedInputType, /) -> None: ...

class ITableItemProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITableItemProvider: ...
    def get_column_header_items(self) -> typing.Optional[IRawElementProviderSimple]: ...
    def get_row_header_items(self) -> typing.Optional[IRawElementProviderSimple]: ...

class ITableProvider(winrt.system.Object):
    row_or_column_major: winrt.windows.ui.xaml.automation.RowOrColumnMajor
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITableProvider: ...
    def get_column_headers(self) -> typing.Optional[IRawElementProviderSimple]: ...
    def get_row_headers(self) -> typing.Optional[IRawElementProviderSimple]: ...

class ITextChildProvider(winrt.system.Object):
    text_container: typing.Optional[IRawElementProviderSimple]
    text_range: typing.Optional[ITextRangeProvider]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITextChildProvider: ...

class ITextEditProvider(winrt.system.Object):
    document_range: typing.Optional[ITextRangeProvider]
    supported_text_selection: winrt.windows.ui.xaml.automation.SupportedTextSelection
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITextEditProvider: ...
    def get_active_composition(self) -> typing.Optional[ITextRangeProvider]: ...
    def get_conversion_target(self) -> typing.Optional[ITextRangeProvider]: ...
    def get_selection(self) -> typing.Optional[ITextRangeProvider]: ...
    def get_visible_ranges(self) -> typing.Optional[ITextRangeProvider]: ...
    def range_from_child(self, child_element: typing.Optional[IRawElementProviderSimple], /) -> typing.Optional[ITextRangeProvider]: ...
    def range_from_point(self, screen_location: winrt.windows.foundation.Point, /) -> typing.Optional[ITextRangeProvider]: ...

class ITextProvider(winrt.system.Object):
    document_range: typing.Optional[ITextRangeProvider]
    supported_text_selection: winrt.windows.ui.xaml.automation.SupportedTextSelection
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITextProvider: ...
    def get_selection(self) -> typing.Optional[ITextRangeProvider]: ...
    def get_visible_ranges(self) -> typing.Optional[ITextRangeProvider]: ...
    def range_from_child(self, child_element: typing.Optional[IRawElementProviderSimple], /) -> typing.Optional[ITextRangeProvider]: ...
    def range_from_point(self, screen_location: winrt.windows.foundation.Point, /) -> typing.Optional[ITextRangeProvider]: ...

class ITextProvider2(winrt.system.Object):
    document_range: typing.Optional[ITextRangeProvider]
    supported_text_selection: winrt.windows.ui.xaml.automation.SupportedTextSelection
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITextProvider2: ...
    def get_caret_range(self) -> typing.Tuple[typing.Optional[ITextRangeProvider], winrt.system.Boolean]: ...
    def get_selection(self) -> typing.Optional[ITextRangeProvider]: ...
    def get_visible_ranges(self) -> typing.Optional[ITextRangeProvider]: ...
    def range_from_annotation(self, annotation_element: typing.Optional[IRawElementProviderSimple], /) -> typing.Optional[ITextRangeProvider]: ...
    def range_from_child(self, child_element: typing.Optional[IRawElementProviderSimple], /) -> typing.Optional[ITextRangeProvider]: ...
    def range_from_point(self, screen_location: winrt.windows.foundation.Point, /) -> typing.Optional[ITextRangeProvider]: ...

class ITextRangeProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITextRangeProvider: ...
    def add_to_selection(self) -> None: ...
    def clone(self) -> typing.Optional[ITextRangeProvider]: ...
    def compare(self, text_range_provider: typing.Optional[ITextRangeProvider], /) -> winrt.system.Boolean: ...
    def compare_endpoints(self, endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, text_range_provider: typing.Optional[ITextRangeProvider], target_endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, /) -> winrt.system.Int32: ...
    def expand_to_enclosing_unit(self, unit: winrt.windows.ui.xaml.automation.text.TextUnit, /) -> None: ...
    def find_attribute(self, attribute_id: winrt.system.Int32, value: typing.Optional[winrt.system.Object], backward: winrt.system.Boolean, /) -> typing.Optional[ITextRangeProvider]: ...
    def find_text(self, text: str, backward: winrt.system.Boolean, ignore_case: winrt.system.Boolean, /) -> typing.Optional[ITextRangeProvider]: ...
    def get_attribute_value(self, attribute_id: winrt.system.Int32, /) -> typing.Optional[winrt.system.Object]: ...
    def get_bounding_rectangles(self) -> winrt.system.Array[winrt.system.Double]: ...
    def get_children(self) -> typing.Optional[IRawElementProviderSimple]: ...
    def get_enclosing_element(self) -> typing.Optional[IRawElementProviderSimple]: ...
    def get_text(self, max_length: winrt.system.Int32, /) -> str: ...
    def move(self, unit: winrt.windows.ui.xaml.automation.text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def move_endpoint_by_range(self, endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, text_range_provider: typing.Optional[ITextRangeProvider], target_endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, /) -> None: ...
    def move_endpoint_by_unit(self, endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, unit: winrt.windows.ui.xaml.automation.text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def remove_from_selection(self) -> None: ...
    def scroll_into_view(self, align_to_top: winrt.system.Boolean, /) -> None: ...
    def select(self) -> None: ...

class ITextRangeProvider2(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITextRangeProvider2: ...
    def add_to_selection(self) -> None: ...
    def clone(self) -> typing.Optional[ITextRangeProvider]: ...
    def compare(self, text_range_provider: typing.Optional[ITextRangeProvider], /) -> winrt.system.Boolean: ...
    def compare_endpoints(self, endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, text_range_provider: typing.Optional[ITextRangeProvider], target_endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, /) -> winrt.system.Int32: ...
    def expand_to_enclosing_unit(self, unit: winrt.windows.ui.xaml.automation.text.TextUnit, /) -> None: ...
    def find_attribute(self, attribute_id: winrt.system.Int32, value: typing.Optional[winrt.system.Object], backward: winrt.system.Boolean, /) -> typing.Optional[ITextRangeProvider]: ...
    def find_text(self, text: str, backward: winrt.system.Boolean, ignore_case: winrt.system.Boolean, /) -> typing.Optional[ITextRangeProvider]: ...
    def get_attribute_value(self, attribute_id: winrt.system.Int32, /) -> typing.Optional[winrt.system.Object]: ...
    def get_bounding_rectangles(self) -> winrt.system.Array[winrt.system.Double]: ...
    def get_children(self) -> typing.Optional[IRawElementProviderSimple]: ...
    def get_enclosing_element(self) -> typing.Optional[IRawElementProviderSimple]: ...
    def get_text(self, max_length: winrt.system.Int32, /) -> str: ...
    def move(self, unit: winrt.windows.ui.xaml.automation.text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def move_endpoint_by_range(self, endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, text_range_provider: typing.Optional[ITextRangeProvider], target_endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, /) -> None: ...
    def move_endpoint_by_unit(self, endpoint: winrt.windows.ui.xaml.automation.text.TextPatternRangeEndpoint, unit: winrt.windows.ui.xaml.automation.text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def remove_from_selection(self) -> None: ...
    def scroll_into_view(self, align_to_top: winrt.system.Boolean, /) -> None: ...
    def select(self) -> None: ...
    def show_context_menu(self) -> None: ...

class IToggleProvider(winrt.system.Object):
    toggle_state: winrt.windows.ui.xaml.automation.ToggleState
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IToggleProvider: ...
    def toggle(self) -> None: ...

class ITransformProvider(winrt.system.Object):
    can_move: winrt.system.Boolean
    can_resize: winrt.system.Boolean
    can_rotate: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITransformProvider: ...
    def move(self, x: winrt.system.Double, y: winrt.system.Double, /) -> None: ...
    def resize(self, width: winrt.system.Double, height: winrt.system.Double, /) -> None: ...
    def rotate(self, degrees: winrt.system.Double, /) -> None: ...

class ITransformProvider2(winrt.system.Object):
    can_zoom: winrt.system.Boolean
    max_zoom: winrt.system.Double
    min_zoom: winrt.system.Double
    zoom_level: winrt.system.Double
    can_move: winrt.system.Boolean
    can_resize: winrt.system.Boolean
    can_rotate: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ITransformProvider2: ...
    def move(self, x: winrt.system.Double, y: winrt.system.Double, /) -> None: ...
    def resize(self, width: winrt.system.Double, height: winrt.system.Double, /) -> None: ...
    def rotate(self, degrees: winrt.system.Double, /) -> None: ...
    def zoom(self, zoom: winrt.system.Double, /) -> None: ...
    def zoom_by_unit(self, zoom_unit: winrt.windows.ui.xaml.automation.ZoomUnit, /) -> None: ...

class IValueProvider(winrt.system.Object):
    is_read_only: winrt.system.Boolean
    value: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IValueProvider: ...
    def set_value(self, value: str, /) -> None: ...

class IVirtualizedItemProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IVirtualizedItemProvider: ...
    def realize(self) -> None: ...

class IWindowProvider(winrt.system.Object):
    interaction_state: winrt.windows.ui.xaml.automation.WindowInteractionState
    is_modal: winrt.system.Boolean
    is_topmost: winrt.system.Boolean
    maximizable: winrt.system.Boolean
    minimizable: winrt.system.Boolean
    visual_state: winrt.windows.ui.xaml.automation.WindowVisualState
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IWindowProvider: ...
    def close(self) -> None: ...
    def set_visual_state(self, state: winrt.windows.ui.xaml.automation.WindowVisualState, /) -> None: ...
    def wait_for_input_idle(self, milliseconds: winrt.system.Int32, /) -> winrt.system.Boolean: ...

