# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.globalization
import winrt.windows.graphics.imaging

Self = typing.TypeVar('Self')

class OcrEngine(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OcrEngine: ...
    @staticmethod
    def is_language_supported(language: typing.Optional[winrt.windows.globalization.Language], /) -> bool: ...
    def recognize_async(self, bitmap: typing.Optional[winrt.windows.graphics.imaging.SoftwareBitmap], /) -> winrt.windows.foundation.IAsyncOperation[OcrResult]: ...
    @staticmethod
    def try_create_from_language(language: typing.Optional[winrt.windows.globalization.Language], /) -> typing.Optional[OcrEngine]: ...
    @staticmethod
    def try_create_from_user_profile_languages() -> typing.Optional[OcrEngine]: ...
    @_property
    def recognizer_language(self) -> typing.Optional[winrt.windows.globalization.Language]: ...
    available_recognizer_languages: typing.ClassVar[typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.globalization.Language]]]
    max_image_dimension: typing.ClassVar[winrt.system.UInt32]

class OcrLine(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OcrLine: ...
    @_property
    def text(self) -> str: ...
    @_property
    def words(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[OcrWord]]: ...

class OcrResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OcrResult: ...
    @_property
    def lines(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[OcrLine]]: ...
    @_property
    def text(self) -> str: ...
    @_property
    def text_angle(self) -> typing.Optional[typing.Optional[winrt.system.Double]]: ...

class OcrWord(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OcrWord: ...
    @_property
    def bounding_rect(self) -> winrt.windows.foundation.Rect: ...
    @_property
    def text(self) -> str: ...

