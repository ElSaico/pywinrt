# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections

from . import MicrosoftAccountMultiFactorAuthenticationType, MicrosoftAccountMultiFactorServiceResponse, MicrosoftAccountMultiFactorSessionApprovalStatus, MicrosoftAccountMultiFactorSessionAuthenticationStatus

Self = typing.TypeVar('Self')

class MicrosoftAccountMultiFactorAuthenticationManager(winrt.system.Object):
    current: typing.ClassVar[typing.Optional[MicrosoftAccountMultiFactorAuthenticationManager]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MicrosoftAccountMultiFactorAuthenticationManager: ...
    def add_device_async(self, user_account_id: str, authentication_token: str, wns_channel_id: str, /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorServiceResponse]: ...
    @typing.overload
    def approve_session_async(self, session_authentiction_status: MicrosoftAccountMultiFactorSessionAuthenticationStatus, authentication_session_info: typing.Optional[MicrosoftAccountMultiFactorSessionInfo], /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorServiceResponse]: ...
    @typing.overload
    def approve_session_async(self, session_authentiction_status: MicrosoftAccountMultiFactorSessionAuthenticationStatus, user_account_id: str, session_id: str, session_authentication_type: MicrosoftAccountMultiFactorAuthenticationType, /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorServiceResponse]: ...
    @typing.overload
    def deny_session_async(self, authentication_session_info: typing.Optional[MicrosoftAccountMultiFactorSessionInfo], /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorServiceResponse]: ...
    @typing.overload
    def deny_session_async(self, user_account_id: str, session_id: str, session_authentication_type: MicrosoftAccountMultiFactorAuthenticationType, /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorServiceResponse]: ...
    def get_one_time_pass_code_async(self, user_account_id: str, code_length: winrt.system.UInt32, /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorOneTimeCodedInfo]: ...
    def get_sessions_and_unregistered_accounts_async(self, user_account_id_list: typing.Iterable[str], /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorUnregisteredAccountsAndSessionInfo]: ...
    def get_sessions_async(self, user_account_id_list: typing.Iterable[str], /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorGetSessionsResult]: ...
    def remove_device_async(self, user_account_id: str, /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorServiceResponse]: ...
    def update_wns_channel_async(self, user_account_id: str, channel_uri: str, /) -> winrt.windows.foundation.IAsyncOperation[MicrosoftAccountMultiFactorServiceResponse]: ...

class MicrosoftAccountMultiFactorGetSessionsResult(winrt.system.Object):
    service_response: MicrosoftAccountMultiFactorServiceResponse
    sessions: typing.Optional[winrt.windows.foundation.collections.IVectorView[MicrosoftAccountMultiFactorSessionInfo]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MicrosoftAccountMultiFactorGetSessionsResult: ...

class MicrosoftAccountMultiFactorOneTimeCodedInfo(winrt.system.Object):
    code: str
    service_response: MicrosoftAccountMultiFactorServiceResponse
    time_interval: datetime.timedelta
    time_to_live: datetime.timedelta
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MicrosoftAccountMultiFactorOneTimeCodedInfo: ...

class MicrosoftAccountMultiFactorSessionInfo(winrt.system.Object):
    approval_status: MicrosoftAccountMultiFactorSessionApprovalStatus
    authentication_type: MicrosoftAccountMultiFactorAuthenticationType
    display_session_id: str
    expiration_time: datetime.datetime
    request_time: datetime.datetime
    session_id: str
    user_account_id: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MicrosoftAccountMultiFactorSessionInfo: ...

class MicrosoftAccountMultiFactorUnregisteredAccountsAndSessionInfo(winrt.system.Object):
    service_response: MicrosoftAccountMultiFactorServiceResponse
    sessions: typing.Optional[winrt.windows.foundation.collections.IVectorView[MicrosoftAccountMultiFactorSessionInfo]]
    unregistered_accounts: typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MicrosoftAccountMultiFactorUnregisteredAccountsAndSessionInfo: ...

