# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import enum
import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.devices.geolocation
import winrt.windows.foundation
import winrt.windows.foundation.collections

class GeofenceMonitorStatus(enum.IntEnum):
    READY = 0
    INITIALIZING = 1
    NO_DATA = 2
    DISABLED = 3
    NOT_INITIALIZED = 4
    NOT_AVAILABLE = 5

class GeofenceRemovalReason(enum.IntEnum):
    USED = 0
    EXPIRED = 1

class GeofenceState(enum.IntFlag):
    NONE = 0
    ENTERED = 0x1
    EXITED = 0x2
    REMOVED = 0x4

class MonitoredGeofenceStates(enum.IntFlag):
    NONE = 0
    ENTERED = 0x1
    EXITED = 0x2
    REMOVED = 0x4

Self = typing.TypeVar('Self')

class Geofence(winrt.system.Object):
    duration: datetime.timedelta
    dwell_time: datetime.timedelta
    geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape]
    id: str
    monitored_states: MonitoredGeofenceStates
    single_use: winrt.system.Boolean
    start_time: datetime.datetime
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Geofence: ...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape]) -> Geofence:...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape], monitored_states: MonitoredGeofenceStates, single_use: winrt.system.Boolean) -> Geofence:...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape], monitored_states: MonitoredGeofenceStates, single_use: winrt.system.Boolean, dwell_time: datetime.timedelta) -> Geofence:...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape], monitored_states: MonitoredGeofenceStates, single_use: winrt.system.Boolean, dwell_time: datetime.timedelta, start_time: datetime.datetime, duration: datetime.timedelta) -> Geofence:...

class GeofenceMonitor(winrt.system.Object):
    geofences: typing.Optional[winrt.windows.foundation.collections.IVector[Geofence]]
    last_known_geoposition: typing.Optional[winrt.windows.devices.geolocation.Geoposition]
    status: GeofenceMonitorStatus
    current: typing.ClassVar[typing.Optional[GeofenceMonitor]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GeofenceMonitor: ...
    def read_reports(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[GeofenceStateChangeReport]]: ...
    def add_geofence_state_changed(self, event_handler: winrt.windows.foundation.TypedEventHandler[GeofenceMonitor, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_geofence_state_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_status_changed(self, event_handler: winrt.windows.foundation.TypedEventHandler[GeofenceMonitor, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_status_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class GeofenceStateChangeReport(winrt.system.Object):
    geofence: typing.Optional[Geofence]
    geoposition: typing.Optional[winrt.windows.devices.geolocation.Geoposition]
    new_state: GeofenceState
    removal_reason: GeofenceRemovalReason
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GeofenceStateChangeReport: ...

