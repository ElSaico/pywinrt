# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation
import winrt.windows.storage
import winrt.windows.storage.streams
import winrt.windows.ui

from . import PdfPageRotation

Self = typing.TypeVar('Self')

class PdfDocument(winrt.system.Object):
    is_password_protected: winrt.system.Boolean
    page_count: winrt.system.UInt32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PdfDocument: ...
    def get_page(self, page_index: winrt.system.UInt32, /) -> typing.Optional[PdfPage]: ...
    @typing.overload
    @staticmethod
    def load_from_file_async(file: typing.Optional[winrt.windows.storage.IStorageFile], /) -> winrt.windows.foundation.IAsyncOperation[PdfDocument]: ...
    @typing.overload
    @staticmethod
    def load_from_file_async(file: typing.Optional[winrt.windows.storage.IStorageFile], password: str, /) -> winrt.windows.foundation.IAsyncOperation[PdfDocument]: ...
    @typing.overload
    @staticmethod
    def load_from_stream_async(input_stream: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], /) -> winrt.windows.foundation.IAsyncOperation[PdfDocument]: ...
    @typing.overload
    @staticmethod
    def load_from_stream_async(input_stream: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], password: str, /) -> winrt.windows.foundation.IAsyncOperation[PdfDocument]: ...

class PdfPage(winrt.system.Object):
    dimensions: typing.Optional[PdfPageDimensions]
    index: winrt.system.UInt32
    preferred_zoom: winrt.system.Single
    rotation: PdfPageRotation
    size: winrt.windows.foundation.Size
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PdfPage: ...
    def close(self) -> None: ...
    def prepare_page_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @typing.overload
    def render_to_stream_async(self, output_stream: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], /) -> winrt.windows.foundation.IAsyncAction: ...
    @typing.overload
    def render_to_stream_async(self, output_stream: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], options: typing.Optional[PdfPageRenderOptions], /) -> winrt.windows.foundation.IAsyncAction: ...

class PdfPageDimensions(winrt.system.Object):
    art_box: winrt.windows.foundation.Rect
    bleed_box: winrt.windows.foundation.Rect
    crop_box: winrt.windows.foundation.Rect
    media_box: winrt.windows.foundation.Rect
    trim_box: winrt.windows.foundation.Rect
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PdfPageDimensions: ...

class PdfPageRenderOptions(winrt.system.Object):
    source_rect: winrt.windows.foundation.Rect
    is_ignoring_high_contrast: winrt.system.Boolean
    destination_width: winrt.system.UInt32
    destination_height: winrt.system.UInt32
    bitmap_encoder_id: winrt.system.Guid
    background_color: winrt.windows.ui.Color
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PdfPageRenderOptions: ...
    def __new__(cls: typing.Type[PdfPageRenderOptions]) -> PdfPageRenderOptions:...

