# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.applicationmodel.contacts
import winrt.windows.foundation

Self = typing.TypeVar('Self')

class ContactDataProviderConnection(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactDataProviderConnection: ...
    def start(self) -> None: ...
    def add_server_search_read_batch_requested(self, handler: winrt.windows.foundation.TypedEventHandler[ContactDataProviderConnection, ContactListServerSearchReadBatchRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_server_search_read_batch_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_sync_requested(self, handler: winrt.windows.foundation.TypedEventHandler[ContactDataProviderConnection, ContactListSyncManagerSyncRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_sync_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_create_or_update_contact_requested(self, handler: winrt.windows.foundation.TypedEventHandler[ContactDataProviderConnection, ContactListCreateOrUpdateContactRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_create_or_update_contact_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_delete_contact_requested(self, handler: winrt.windows.foundation.TypedEventHandler[ContactDataProviderConnection, ContactListDeleteContactRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_delete_contact_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class ContactDataProviderTriggerDetails(winrt.system.Object):
    connection: typing.Optional[ContactDataProviderConnection]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactDataProviderTriggerDetails: ...

class ContactListCreateOrUpdateContactRequest(winrt.system.Object):
    contact: typing.Optional[winrt.windows.applicationmodel.contacts.Contact]
    contact_list_id: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListCreateOrUpdateContactRequest: ...
    def report_completed_async(self, created_or_updated_contact: typing.Optional[winrt.windows.applicationmodel.contacts.Contact], /) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class ContactListCreateOrUpdateContactRequestEventArgs(winrt.system.Object):
    request: typing.Optional[ContactListCreateOrUpdateContactRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListCreateOrUpdateContactRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class ContactListDeleteContactRequest(winrt.system.Object):
    contact_id: str
    contact_list_id: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListDeleteContactRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class ContactListDeleteContactRequestEventArgs(winrt.system.Object):
    request: typing.Optional[ContactListDeleteContactRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListDeleteContactRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class ContactListServerSearchReadBatchRequest(winrt.system.Object):
    contact_list_id: str
    options: typing.Optional[winrt.windows.applicationmodel.contacts.ContactQueryOptions]
    session_id: str
    suggested_batch_size: winrt.system.UInt32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListServerSearchReadBatchRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self, batch_status: winrt.windows.applicationmodel.contacts.ContactBatchStatus, /) -> winrt.windows.foundation.IAsyncAction: ...
    def save_contact_async(self, contact: typing.Optional[winrt.windows.applicationmodel.contacts.Contact], /) -> winrt.windows.foundation.IAsyncAction: ...

class ContactListServerSearchReadBatchRequestEventArgs(winrt.system.Object):
    request: typing.Optional[ContactListServerSearchReadBatchRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListServerSearchReadBatchRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class ContactListSyncManagerSyncRequest(winrt.system.Object):
    contact_list_id: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListSyncManagerSyncRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...

class ContactListSyncManagerSyncRequestEventArgs(winrt.system.Object):
    request: typing.Optional[ContactListSyncManagerSyncRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactListSyncManagerSyncRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

