# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import enum
import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.storage
import winrt.windows.storage.streams

Self = typing.TypeVar('Self')

class LocalContentSuggestionSettings(winrt.system.Object):
    enabled: winrt.system.Boolean
    aqs_filter: str
    locations: typing.Optional[winrt.windows.foundation.collections.IVector[winrt.windows.storage.StorageFolder]]
    properties_to_match: typing.Optional[winrt.windows.foundation.collections.IVector[str]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LocalContentSuggestionSettings: ...
    def __new__(cls: typing.Type[LocalContentSuggestionSettings]) -> LocalContentSuggestionSettings:...

class SearchPane(winrt.system.Object):
    show_on_keyboard_input: winrt.system.Boolean
    search_history_enabled: winrt.system.Boolean
    search_history_context: str
    placeholder_text: str
    language: str
    query_text: str
    visible: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPane: ...
    @staticmethod
    def get_for_current_view() -> typing.Optional[SearchPane]: ...
    @staticmethod
    def hide_this_application() -> None: ...
    def set_local_content_suggestion_settings(self, settings: typing.Optional[LocalContentSuggestionSettings], /) -> None: ...
    @typing.overload
    def show(self) -> None: ...
    @typing.overload
    def show(self, query: str, /) -> None: ...
    def try_set_query_text(self, query: str, /) -> winrt.system.Boolean: ...
    def add_query_changed(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneQueryChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_query_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_query_submitted(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneQuerySubmittedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_query_submitted(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_result_suggestion_chosen(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneResultSuggestionChosenEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_result_suggestion_chosen(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_suggestions_requested(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneSuggestionsRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_suggestions_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_visibility_changed(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneVisibilityChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_visibility_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class SearchPaneQueryChangedEventArgs(winrt.system.Object):
    language: str
    linguistic_details: typing.Optional[SearchPaneQueryLinguisticDetails]
    query_text: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneQueryChangedEventArgs: ...

class SearchPaneQueryLinguisticDetails(winrt.system.Object):
    query_text_alternatives: typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]
    query_text_composition_length: winrt.system.UInt32
    query_text_composition_start: winrt.system.UInt32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneQueryLinguisticDetails: ...

class SearchPaneQuerySubmittedEventArgs(winrt.system.Object):
    language: str
    query_text: str
    linguistic_details: typing.Optional[SearchPaneQueryLinguisticDetails]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneQuerySubmittedEventArgs: ...

class SearchPaneResultSuggestionChosenEventArgs(winrt.system.Object):
    tag: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneResultSuggestionChosenEventArgs: ...

class SearchPaneSuggestionsRequest(winrt.system.Object):
    is_canceled: winrt.system.Boolean
    search_suggestion_collection: typing.Optional[SearchSuggestionCollection]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneSuggestionsRequest: ...
    def get_deferral(self) -> typing.Optional[SearchPaneSuggestionsRequestDeferral]: ...

class SearchPaneSuggestionsRequestDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneSuggestionsRequestDeferral: ...
    def complete(self) -> None: ...

class SearchPaneSuggestionsRequestedEventArgs(winrt.system.Object):
    language: str
    linguistic_details: typing.Optional[SearchPaneQueryLinguisticDetails]
    query_text: str
    request: typing.Optional[SearchPaneSuggestionsRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneSuggestionsRequestedEventArgs: ...

class SearchPaneVisibilityChangedEventArgs(winrt.system.Object):
    visible: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneVisibilityChangedEventArgs: ...

class SearchQueryLinguisticDetails(winrt.system.Object):
    query_text_alternatives: typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]
    query_text_composition_length: winrt.system.UInt32
    query_text_composition_start: winrt.system.UInt32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchQueryLinguisticDetails: ...
    def __new__(cls: typing.Type[SearchQueryLinguisticDetails], query_text_alternatives: typing.Iterable[str], query_text_composition_start: winrt.system.UInt32, query_text_composition_length: winrt.system.UInt32) -> SearchQueryLinguisticDetails:...

class SearchSuggestionCollection(winrt.system.Object):
    size: winrt.system.UInt32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchSuggestionCollection: ...
    def append_query_suggestion(self, text: str, /) -> None: ...
    def append_query_suggestions(self, suggestions: typing.Iterable[str], /) -> None: ...
    def append_result_suggestion(self, text: str, detail_text: str, tag: str, image: typing.Optional[winrt.windows.storage.streams.IRandomAccessStreamReference], image_alternate_text: str, /) -> None: ...
    def append_search_separator(self, label: str, /) -> None: ...

class SearchSuggestionsRequest(winrt.system.Object):
    is_canceled: winrt.system.Boolean
    search_suggestion_collection: typing.Optional[SearchSuggestionCollection]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchSuggestionsRequest: ...
    def get_deferral(self) -> typing.Optional[SearchSuggestionsRequestDeferral]: ...

class SearchSuggestionsRequestDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchSuggestionsRequestDeferral: ...
    def complete(self) -> None: ...

class ISearchPaneQueryChangedEventArgs(winrt.system.Object):
    language: str
    linguistic_details: typing.Optional[SearchPaneQueryLinguisticDetails]
    query_text: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISearchPaneQueryChangedEventArgs: ...

