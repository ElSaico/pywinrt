# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.system

from . import CredentialPromptType, OnlineIdSystemTicketStatus

Self = typing.TypeVar('Self')

class OnlineIdAuthenticator(winrt.system.Object):
    application_id: uuid.UUID
    authenticated_safe_customer_id: str
    can_sign_out: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OnlineIdAuthenticator: ...
    def __new__(cls: typing.Type[OnlineIdAuthenticator]) -> OnlineIdAuthenticator:...
    @typing.overload
    def authenticate_user_async(self, request: typing.Optional[OnlineIdServiceTicketRequest], /) -> UserAuthenticationOperation: ...
    @typing.overload
    def authenticate_user_async(self, requests: typing.Iterable[OnlineIdServiceTicketRequest], credential_prompt_type: CredentialPromptType, /) -> UserAuthenticationOperation: ...
    def sign_out_user_async(self) -> SignOutUserOperation: ...

class OnlineIdServiceTicket(winrt.system.Object):
    error_code: winrt.system.Int32
    request: typing.Optional[OnlineIdServiceTicketRequest]
    value: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OnlineIdServiceTicket: ...

class OnlineIdServiceTicketRequest(winrt.system.Object):
    policy: str
    service: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OnlineIdServiceTicketRequest: ...
    @typing.overload
    def __new__(cls: typing.Type[OnlineIdServiceTicketRequest], service: str, policy: str) -> OnlineIdServiceTicketRequest:...
    @typing.overload
    def __new__(cls: typing.Type[OnlineIdServiceTicketRequest], service: str) -> OnlineIdServiceTicketRequest:...

class OnlineIdSystemAuthenticator(winrt.system.Object):
    default: typing.ClassVar[typing.Optional[OnlineIdSystemAuthenticatorForUser]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OnlineIdSystemAuthenticator: ...
    @staticmethod
    def get_for_user(user: typing.Optional[winrt.windows.system.User], /) -> typing.Optional[OnlineIdSystemAuthenticatorForUser]: ...

class OnlineIdSystemAuthenticatorForUser(winrt.system.Object):
    application_id: uuid.UUID
    user: typing.Optional[winrt.windows.system.User]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OnlineIdSystemAuthenticatorForUser: ...
    def get_ticket_async(self, request: typing.Optional[OnlineIdServiceTicketRequest], /) -> winrt.windows.foundation.IAsyncOperation[OnlineIdSystemTicketResult]: ...

class OnlineIdSystemIdentity(winrt.system.Object):
    id: str
    ticket: typing.Optional[OnlineIdServiceTicket]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OnlineIdSystemIdentity: ...

class OnlineIdSystemTicketResult(winrt.system.Object):
    extended_error: winrt.windows.foundation.HResult
    identity: typing.Optional[OnlineIdSystemIdentity]
    status: OnlineIdSystemTicketStatus
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> OnlineIdSystemTicketResult: ...

class SignOutUserOperation(winrt.system.Object):
    error_code: winrt.windows.foundation.HResult
    id: winrt.system.UInt32
    status: winrt.windows.foundation.AsyncStatus
    completed: typing.Optional[winrt.windows.foundation.AsyncActionCompletedHandler]
    def __await__(self) -> typing.Generator[typing.Any, None, None]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SignOutUserOperation: ...
    def cancel(self) -> None: ...
    def close(self) -> None: ...
    def get_results(self) -> None: ...

class UserAuthenticationOperation(winrt.system.Object):
    error_code: winrt.windows.foundation.HResult
    id: winrt.system.UInt32
    status: winrt.windows.foundation.AsyncStatus
    completed: typing.Optional[winrt.windows.foundation.AsyncOperationCompletedHandler[UserIdentity]]
    def __await__(self) -> typing.Generator[typing.Any, None, typing.Optional[UserIdentity]]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserAuthenticationOperation: ...
    def cancel(self) -> None: ...
    def close(self) -> None: ...
    def get_results(self) -> typing.Optional[UserIdentity]: ...

class UserIdentity(winrt.system.Object):
    first_name: str
    id: str
    is_beta_account: winrt.system.Boolean
    is_confirmed_p_c: winrt.system.Boolean
    last_name: str
    safe_customer_id: str
    sign_in_name: str
    tickets: typing.Optional[winrt.windows.foundation.collections.IVectorView[OnlineIdServiceTicket]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserIdentity: ...

