# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.applicationmodel.contacts
import winrt.windows.foundation
import winrt.windows.foundation.collections

from . import AddContactResult

Self = typing.TypeVar('Self')

class ContactPickerUI(winrt.system.Object):
    desired_fields: typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]
    selection_mode: winrt.windows.applicationmodel.contacts.ContactSelectionMode
    desired_fields_with_contact_field_type: typing.Optional[winrt.windows.foundation.collections.IVector[winrt.windows.applicationmodel.contacts.ContactFieldType]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactPickerUI: ...
    @typing.overload
    def add_contact(self, contact: typing.Optional[winrt.windows.applicationmodel.contacts.Contact], /) -> AddContactResult: ...
    @typing.overload
    def add_contact(self, id: str, contact: typing.Optional[winrt.windows.applicationmodel.contacts.Contact], /) -> AddContactResult: ...
    def contains_contact(self, id: str, /) -> bool: ...
    def remove_contact(self, id: str, /) -> None: ...
    def add_contact_removed(self, handler: winrt.windows.foundation.TypedEventHandler[ContactPickerUI, ContactRemovedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_contact_removed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class ContactRemovedEventArgs(winrt.system.Object):
    id: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactRemovedEventArgs: ...

