// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Graphics.Printing.h")
#include "py.Windows.Graphics.Printing.h"
#endif

#if __has_include("py.Windows.UI.Xaml.h")
#include "py.Windows.UI.Xaml.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Graphics.Printing.h>
#include <winrt/Windows.UI.Xaml.h>

#include <winrt/Windows.UI.Xaml.Printing.h>

namespace py::proj::Windows::UI::Xaml::Printing
{}

namespace py::impl::Windows::UI::Xaml::Printing
{
    struct AddPagesEventHandler
    {
        static winrt::Windows::UI::Xaml::Printing::AddPagesEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                winrt::handle_type<py::gil_state_traits> gil_state{ PyGILState_Ensure() };

                py::pyobj_handle py_param0{ py::convert(param0) };
                py::pyobj_handle py_param1{ py::convert(param1) };

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct GetPreviewPageEventHandler
    {
        static winrt::Windows::UI::Xaml::Printing::GetPreviewPageEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                winrt::handle_type<py::gil_state_traits> gil_state{ PyGILState_Ensure() };

                py::pyobj_handle py_param0{ py::convert(param0) };
                py::pyobj_handle py_param1{ py::convert(param1) };

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct PaginateEventHandler
    {
        static winrt::Windows::UI::Xaml::Printing::PaginateEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                winrt::handle_type<py::gil_state_traits> gil_state{ PyGILState_Ensure() };

                py::pyobj_handle py_param0{ py::convert(param0) };
                py::pyobj_handle py_param1{ py::convert(param1) };

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::UI::Xaml::Printing
{
    using AddPagesEventArgs = py::winrt_wrapper<winrt::Windows::UI::Xaml::Printing::AddPagesEventArgs>;
    using GetPreviewPageEventArgs = py::winrt_wrapper<winrt::Windows::UI::Xaml::Printing::GetPreviewPageEventArgs>;
    using PaginateEventArgs = py::winrt_wrapper<winrt::Windows::UI::Xaml::Printing::PaginateEventArgs>;
    using PrintDocument = py::winrt_wrapper<winrt::Windows::UI::Xaml::Printing::PrintDocument>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Xaml::Printing::PreviewPageCountType> = "i";


    template<>
    struct py_type<winrt::Windows::UI::Xaml::Printing::PreviewPageCountType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Xaml::Printing::AddPagesEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Xaml::Printing::GetPreviewPageEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Xaml::Printing::PaginateEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Xaml::Printing::PrintDocument>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Printing::AddPagesEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Printing::AddPagesEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Printing::GetPreviewPageEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Printing::GetPreviewPageEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Printing::PaginateEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Printing::PaginateEventHandler;
    };

}
