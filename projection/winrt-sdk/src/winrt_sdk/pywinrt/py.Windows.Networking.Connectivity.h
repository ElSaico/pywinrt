// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Networking.h")
#include "py.Windows.Networking.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Networking.h>
#include <winrt/Windows.Storage.Streams.h>

#include <winrt/Windows.Networking.Connectivity.h>

namespace py::proj::Windows::Networking::Connectivity
{}

namespace py::impl::Windows::Networking::Connectivity
{
    struct NetworkStatusChangedEventHandler
    {
        static winrt::Windows::Networking::Connectivity::NetworkStatusChangedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0)
            {
                winrt::handle_type<py::gil_state_traits> gil_state{ PyGILState_Ensure() };

                py::pyobj_handle py_param0{ py::convert(param0) };

                py::pyobj_handle args{ PyTuple_Pack(1, py_param0.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::Networking::Connectivity
{
    using AttributedNetworkUsage = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::AttributedNetworkUsage>;
    using CellularApnContext = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::CellularApnContext>;
    using ConnectionCost = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ConnectionCost>;
    using ConnectionProfile = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ConnectionProfile>;
    using ConnectionProfileFilter = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ConnectionProfileFilter>;
    using ConnectionSession = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ConnectionSession>;
    using ConnectivityInterval = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ConnectivityInterval>;
    using ConnectivityManager = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ConnectivityManager>;
    using DataPlanStatus = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::DataPlanStatus>;
    using DataPlanUsage = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::DataPlanUsage>;
    using DataUsage = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::DataUsage>;
    using IPInformation = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::IPInformation>;
    using LanIdentifier = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::LanIdentifier>;
    using LanIdentifierData = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::LanIdentifierData>;
    using NetworkAdapter = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::NetworkAdapter>;
    using NetworkInformation = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::NetworkInformation>;
    using NetworkItem = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::NetworkItem>;
    using NetworkSecuritySettings = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::NetworkSecuritySettings>;
    using NetworkStateChangeEventDetails = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::NetworkStateChangeEventDetails>;
    using NetworkUsage = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::NetworkUsage>;
    using ProviderNetworkUsage = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ProviderNetworkUsage>;
    using ProxyConfiguration = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::ProxyConfiguration>;
    using RoutePolicy = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::RoutePolicy>;
    using WlanConnectionProfileDetails = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::WlanConnectionProfileDetails>;
    using WwanConnectionProfileDetails = py::winrt_wrapper<winrt::Windows::Networking::Connectivity::WwanConnectionProfileDetails>;
    using NetworkUsageStates = py::winrt_struct_wrapper<winrt::Windows::Networking::Connectivity::NetworkUsageStates>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::CellularApnAuthenticationType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::ConnectionProfileDeleteStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::DataUsageGranularity> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::DomainAuthenticationKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::DomainConnectivityLevel> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::NetworkAuthenticationType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::NetworkConnectivityLevel> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::NetworkCostType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::NetworkEncryptionType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::NetworkTypes> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::RoamingStates> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::TriStates> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::WwanDataClass> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::WwanNetworkIPKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::WwanNetworkRegistrationState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::Connectivity::NetworkUsageStates> = "T{i:roaming:i:shared:}";


    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::CellularApnAuthenticationType>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "CellularApnAuthenticationType";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::ConnectionProfileDeleteStatus>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "ConnectionProfileDeleteStatus";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::DataUsageGranularity>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "DataUsageGranularity";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::DomainAuthenticationKind>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "DomainAuthenticationKind";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::DomainConnectivityLevel>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "DomainConnectivityLevel";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::NetworkAuthenticationType>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "NetworkAuthenticationType";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::NetworkConnectivityLevel>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "NetworkConnectivityLevel";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::NetworkCostType>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "NetworkCostType";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::NetworkEncryptionType>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "NetworkEncryptionType";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::NetworkTypes>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "NetworkTypes";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::RoamingStates>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "RoamingStates";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::TriStates>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "TriStates";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::WwanDataClass>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "WwanDataClass";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::WwanNetworkIPKind>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "WwanNetworkIPKind";
    };

    template<>
    struct py_type<winrt::Windows::Networking::Connectivity::WwanNetworkRegistrationState>
    {
        static constexpr const char* module_name = "winrt.windows.networking.connectivity";
        static constexpr const char* type_name = "WwanNetworkRegistrationState";
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::AttributedNetworkUsage>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::CellularApnContext>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ConnectionCost>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ConnectionProfile>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ConnectionProfileFilter>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ConnectionSession>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ConnectivityInterval>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ConnectivityManager>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::DataPlanStatus>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::DataPlanUsage>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::DataUsage>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::IPInformation>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::LanIdentifier>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::LanIdentifierData>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::NetworkAdapter>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::NetworkInformation>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::NetworkItem>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::NetworkSecuritySettings>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::NetworkStateChangeEventDetails>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::NetworkUsage>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ProviderNetworkUsage>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::ProxyConfiguration>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::RoutePolicy>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::WlanConnectionProfileDetails>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::WwanConnectionProfileDetails>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::Connectivity::NetworkUsageStates>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
    template <>
    struct delegate_python_type<winrt::Windows::Networking::Connectivity::NetworkStatusChangedEventHandler>
    {
        using type = py::impl::Windows::Networking::Connectivity::NetworkStatusChangedEventHandler;
    };

}
