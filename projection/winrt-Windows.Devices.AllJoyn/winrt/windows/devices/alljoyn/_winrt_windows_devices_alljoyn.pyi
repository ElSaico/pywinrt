# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.devices.enumeration
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.globalization
import winrt.windows.networking.sockets
import winrt.windows.security.credentials
import winrt.windows.security.cryptography.certificates

from . import AllJoynAuthenticationMechanism, AllJoynBusAttachmentState, AllJoynSessionLostReason, AllJoynTrafficType

Self = typing.TypeVar('Self')

class AllJoynAboutData(winrt.system.Object):
    default_description: str
    default_app_name: str
    date_of_manufacture: typing.Optional[typing.Optional[datetime.datetime]]
    default_manufacturer: str
    app_id: uuid.UUID
    support_url: typing.Optional[winrt.windows.foundation.Uri]
    software_version: str
    model_number: str
    is_enabled: winrt.system.Boolean
    app_names: typing.Optional[winrt.windows.foundation.collections.IMap[str, str]]
    manufacturers: typing.Optional[winrt.windows.foundation.collections.IMap[str, str]]
    descriptions: typing.Optional[winrt.windows.foundation.collections.IMap[str, str]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynAboutData: ...

class AllJoynAboutDataView(winrt.system.Object):
    a_j_software_version: str
    app_id: uuid.UUID
    app_name: str
    date_of_manufacture: typing.Optional[typing.Optional[datetime.datetime]]
    default_language: typing.Optional[winrt.windows.globalization.Language]
    description: str
    device_id: str
    device_name: str
    hardware_version: str
    manufacturer: str
    model_number: str
    properties: typing.Optional[winrt.windows.foundation.collections.IMapView[str, winrt.system.Object]]
    software_version: str
    status: winrt.system.Int32
    support_url: typing.Optional[winrt.windows.foundation.Uri]
    supported_languages: typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.globalization.Language]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynAboutDataView: ...
    @typing.overload
    @staticmethod
    def get_data_by_session_port_async(unique_name: str, bus_attachment: typing.Optional[AllJoynBusAttachment], session_port: winrt.system.UInt16, /) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]: ...
    @typing.overload
    @staticmethod
    def get_data_by_session_port_async(unique_name: str, bus_attachment: typing.Optional[AllJoynBusAttachment], session_port: winrt.system.UInt16, language: typing.Optional[winrt.windows.globalization.Language], /) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]: ...

class AllJoynAcceptSessionJoinerEventArgs(winrt.system.Object):
    same_network: winrt.system.Boolean
    same_physical_node: winrt.system.Boolean
    session_port: winrt.system.UInt16
    traffic_type: AllJoynTrafficType
    unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynAcceptSessionJoinerEventArgs: ...
    def __new__(cls: typing.Type[AllJoynAcceptSessionJoinerEventArgs], unique_name: str, session_port: winrt.system.UInt16, traffic_type: AllJoynTrafficType, proximity: winrt.system.UInt8, accept_session_joiner: typing.Optional[IAllJoynAcceptSessionJoiner]) -> AllJoynAcceptSessionJoinerEventArgs:...
    def accept(self) -> None: ...

class AllJoynAuthenticationCompleteEventArgs(winrt.system.Object):
    authentication_mechanism: AllJoynAuthenticationMechanism
    peer_unique_name: str
    succeeded: winrt.system.Boolean
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynAuthenticationCompleteEventArgs: ...

class AllJoynBusAttachment(winrt.system.Object):
    about_data: typing.Optional[AllJoynAboutData]
    authentication_mechanisms: typing.Optional[winrt.windows.foundation.collections.IVector[AllJoynAuthenticationMechanism]]
    connection_specification: str
    state: AllJoynBusAttachmentState
    unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynBusAttachment: ...
    @typing.overload
    def __new__(cls: typing.Type[AllJoynBusAttachment], connection_specification: str) -> AllJoynBusAttachment:...
    @typing.overload
    def __new__(cls: typing.Type[AllJoynBusAttachment]) -> AllJoynBusAttachment:...
    def connect(self) -> None: ...
    def disconnect(self) -> None: ...
    @typing.overload
    def get_about_data_async(self, service_info: typing.Optional[AllJoynServiceInfo], /) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]: ...
    @typing.overload
    def get_about_data_async(self, service_info: typing.Optional[AllJoynServiceInfo], language: typing.Optional[winrt.windows.globalization.Language], /) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]: ...
    @staticmethod
    def get_default() -> typing.Optional[AllJoynBusAttachment]: ...
    @staticmethod
    def get_watcher(required_interfaces: typing.Iterable[str], /) -> typing.Optional[winrt.windows.devices.enumeration.DeviceWatcher]: ...
    def ping_async(self, unique_name: str, /) -> winrt.windows.foundation.IAsyncOperation[winrt.system.Int32]: ...
    def add_authentication_complete(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynAuthenticationCompleteEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_authentication_complete(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_credentials_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynCredentialsRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_credentials_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_credentials_verification_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynCredentialsVerificationRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_credentials_verification_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_state_changed(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynBusAttachmentStateChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_state_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_accept_session_joiner_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynAcceptSessionJoinerEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_accept_session_joiner_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_session_joined(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynSessionJoinedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_session_joined(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class AllJoynBusAttachmentStateChangedEventArgs(winrt.system.Object):
    state: AllJoynBusAttachmentState
    status: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynBusAttachmentStateChangedEventArgs: ...

class AllJoynBusObject(winrt.system.Object):
    bus_attachment: typing.Optional[AllJoynBusAttachment]
    session: typing.Optional[AllJoynSession]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynBusObject: ...
    @typing.overload
    def __new__(cls: typing.Type[AllJoynBusObject], object_path: str) -> AllJoynBusObject:...
    @typing.overload
    def __new__(cls: typing.Type[AllJoynBusObject], object_path: str, bus_attachment: typing.Optional[AllJoynBusAttachment]) -> AllJoynBusObject:...
    @typing.overload
    def __new__(cls: typing.Type[AllJoynBusObject]) -> AllJoynBusObject:...
    def add_producer(self, producer: typing.Optional[IAllJoynProducer], /) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def add_stopped(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusObject, AllJoynBusObjectStoppedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_stopped(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class AllJoynBusObjectStoppedEventArgs(winrt.system.Object):
    status: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynBusObjectStoppedEventArgs: ...
    def __new__(cls: typing.Type[AllJoynBusObjectStoppedEventArgs], status: winrt.system.Int32) -> AllJoynBusObjectStoppedEventArgs:...

class AllJoynCredentials(winrt.system.Object):
    timeout: datetime.timedelta
    password_credential: typing.Optional[winrt.windows.security.credentials.PasswordCredential]
    certificate: typing.Optional[winrt.windows.security.cryptography.certificates.Certificate]
    authentication_mechanism: AllJoynAuthenticationMechanism
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynCredentials: ...

class AllJoynCredentialsRequestedEventArgs(winrt.system.Object):
    attempt_count: winrt.system.UInt16
    credentials: typing.Optional[AllJoynCredentials]
    peer_unique_name: str
    requested_user_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynCredentialsRequestedEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AllJoynCredentialsVerificationRequestedEventArgs(winrt.system.Object):
    authentication_mechanism: AllJoynAuthenticationMechanism
    peer_certificate: typing.Optional[winrt.windows.security.cryptography.certificates.Certificate]
    peer_certificate_error_severity: winrt.windows.networking.sockets.SocketSslErrorSeverity
    peer_certificate_errors: typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.ChainValidationResult]]
    peer_intermediate_certificates: typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.Certificate]]
    peer_unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynCredentialsVerificationRequestedEventArgs: ...
    def accept(self) -> None: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

class AllJoynMessageInfo(winrt.system.Object):
    sender_unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynMessageInfo: ...
    def __new__(cls: typing.Type[AllJoynMessageInfo], sender_unique_name: str) -> AllJoynMessageInfo:...

class AllJoynProducerStoppedEventArgs(winrt.system.Object):
    status: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynProducerStoppedEventArgs: ...
    def __new__(cls: typing.Type[AllJoynProducerStoppedEventArgs], status: winrt.system.Int32) -> AllJoynProducerStoppedEventArgs:...

class AllJoynServiceInfo(winrt.system.Object):
    object_path: str
    session_port: winrt.system.UInt16
    unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynServiceInfo: ...
    def __new__(cls: typing.Type[AllJoynServiceInfo], unique_name: str, object_path: str, session_port: winrt.system.UInt16) -> AllJoynServiceInfo:...
    @staticmethod
    def from_id_async(device_id: str, /) -> winrt.windows.foundation.IAsyncOperation[AllJoynServiceInfo]: ...

class AllJoynServiceInfoRemovedEventArgs(winrt.system.Object):
    unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynServiceInfoRemovedEventArgs: ...
    def __new__(cls: typing.Type[AllJoynServiceInfoRemovedEventArgs], unique_name: str) -> AllJoynServiceInfoRemovedEventArgs:...

class AllJoynSession(winrt.system.Object):
    id: winrt.system.Int32
    status: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynSession: ...
    @typing.overload
    @staticmethod
    def get_from_service_info_async(service_info: typing.Optional[AllJoynServiceInfo], /) -> winrt.windows.foundation.IAsyncOperation[AllJoynSession]: ...
    @typing.overload
    @staticmethod
    def get_from_service_info_async(service_info: typing.Optional[AllJoynServiceInfo], bus_attachment: typing.Optional[AllJoynBusAttachment], /) -> winrt.windows.foundation.IAsyncOperation[AllJoynSession]: ...
    def remove_member_async(self, unique_name: str, /) -> winrt.windows.foundation.IAsyncOperation[winrt.system.Int32]: ...
    def add_lost(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynSession, AllJoynSessionLostEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_lost(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_member_added(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynSession, AllJoynSessionMemberAddedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_member_added(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_member_removed(self, handler: winrt.windows.foundation.TypedEventHandler[AllJoynSession, AllJoynSessionMemberRemovedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_member_removed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class AllJoynSessionJoinedEventArgs(winrt.system.Object):
    session: typing.Optional[AllJoynSession]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynSessionJoinedEventArgs: ...
    def __new__(cls: typing.Type[AllJoynSessionJoinedEventArgs], session: typing.Optional[AllJoynSession]) -> AllJoynSessionJoinedEventArgs:...

class AllJoynSessionLostEventArgs(winrt.system.Object):
    reason: AllJoynSessionLostReason
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynSessionLostEventArgs: ...
    def __new__(cls: typing.Type[AllJoynSessionLostEventArgs], reason: AllJoynSessionLostReason) -> AllJoynSessionLostEventArgs:...

class AllJoynSessionMemberAddedEventArgs(winrt.system.Object):
    unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynSessionMemberAddedEventArgs: ...
    def __new__(cls: typing.Type[AllJoynSessionMemberAddedEventArgs], unique_name: str) -> AllJoynSessionMemberAddedEventArgs:...

class AllJoynSessionMemberRemovedEventArgs(winrt.system.Object):
    unique_name: str
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynSessionMemberRemovedEventArgs: ...
    def __new__(cls: typing.Type[AllJoynSessionMemberRemovedEventArgs], unique_name: str) -> AllJoynSessionMemberRemovedEventArgs:...

class AllJoynStatus(winrt.system.Object):
    authentication_failed: typing.ClassVar[winrt.system.Int32]
    authentication_rejected_by_user: typing.ClassVar[winrt.system.Int32]
    connection_refused: typing.ClassVar[winrt.system.Int32]
    fail: typing.ClassVar[winrt.system.Int32]
    insufficient_security: typing.ClassVar[winrt.system.Int32]
    invalid_argument1: typing.ClassVar[winrt.system.Int32]
    invalid_argument2: typing.ClassVar[winrt.system.Int32]
    invalid_argument3: typing.ClassVar[winrt.system.Int32]
    invalid_argument4: typing.ClassVar[winrt.system.Int32]
    invalid_argument5: typing.ClassVar[winrt.system.Int32]
    invalid_argument6: typing.ClassVar[winrt.system.Int32]
    invalid_argument7: typing.ClassVar[winrt.system.Int32]
    invalid_argument8: typing.ClassVar[winrt.system.Int32]
    ok: typing.ClassVar[winrt.system.Int32]
    operation_timed_out: typing.ClassVar[winrt.system.Int32]
    other_end_closed: typing.ClassVar[winrt.system.Int32]
    ssl_connect_failed: typing.ClassVar[winrt.system.Int32]
    ssl_identity_verification_failed: typing.ClassVar[winrt.system.Int32]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynStatus: ...

class AllJoynWatcherStoppedEventArgs(winrt.system.Object):
    status: winrt.system.Int32
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AllJoynWatcherStoppedEventArgs: ...
    def __new__(cls: typing.Type[AllJoynWatcherStoppedEventArgs], status: winrt.system.Int32) -> AllJoynWatcherStoppedEventArgs:...

class IAllJoynAcceptSessionJoiner(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAllJoynAcceptSessionJoiner: ...
    def accept(self) -> None: ...

class IAllJoynProducer(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAllJoynProducer: ...
    def set_bus_object(self, bus_object: typing.Optional[AllJoynBusObject], /) -> None: ...

