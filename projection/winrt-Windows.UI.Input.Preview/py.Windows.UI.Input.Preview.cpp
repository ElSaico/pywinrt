// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#include "pybase.h"
#include "py.Windows.UI.Input.Preview.h"


namespace py::cpp::Windows::UI::Input::Preview
{
    // ----- InputActivationListenerPreview class --------------------
    static constexpr const char* const type_name_InputActivationListenerPreview = "InputActivationListenerPreview";

    static PyObject* _new_InputActivationListenerPreview(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(type_name_InputActivationListenerPreview);
        return nullptr;
    }

    static PyObject* InputActivationListenerPreview_CreateForApplicationWindow(PyObject* /*unused*/, PyObject* args) noexcept
    {
        auto arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            if (!winrt::Windows::Foundation::Metadata::ApiInformation::IsMethodPresent(L"Windows.UI.Input.Preview.InputActivationListenerPreview", L"CreateForApplicationWindow", 1))
            {
                py::set_arg_count_version_error(1);
                return nullptr;
            }

            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::WindowManagement::AppWindow>(args, 0);

                return py::convert(winrt::Windows::UI::Input::Preview::InputActivationListenerPreview::CreateForApplicationWindow(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyMethodDef _methods_InputActivationListenerPreview[] = {
        { "create_for_application_window", reinterpret_cast<PyCFunction>(InputActivationListenerPreview_CreateForApplicationWindow), METH_VARARGS | METH_STATIC, nullptr },
        { }
    };

    static PyGetSetDef _getset_InputActivationListenerPreview[] = {
        { }
    };

    static PyType_Slot _type_slots_InputActivationListenerPreview[] = 
    {
        { Py_tp_new, reinterpret_cast<void*>(_new_InputActivationListenerPreview) },
        { Py_tp_methods, reinterpret_cast<void*>(_methods_InputActivationListenerPreview) },
        { Py_tp_getset, reinterpret_cast<void*>(_getset_InputActivationListenerPreview) },
        { },
    };

    static PyType_Spec type_spec_InputActivationListenerPreview =
    {
        "_winrt_Windows_UI_Input_Preview.InputActivationListenerPreview",
        0,
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_InputActivationListenerPreview
    };

    // ----- Windows.UI.Input.Preview Initialization --------------------
    PyDoc_STRVAR(module_doc, "Windows::UI::Input::Preview");


    static PyModuleDef module_def
        = {PyModuleDef_HEAD_INIT,
           "_winrt_Windows_UI_Input_Preview",
           module_doc,
           0,
           nullptr,
           nullptr,
           nullptr,
           nullptr,
           nullptr};

} // py::cpp::Windows::UI::Input::Preview

PyMODINIT_FUNC PyInit__winrt_Windows_UI_Input_Preview(void) noexcept
{
    using namespace py::cpp::Windows::UI::Input::Preview;

    py::pyobj_handle module{PyModule_Create(&module_def)};

    if (!module)
    {
        return nullptr;
    }

    auto object_type = py::get_object_type();
    if (!object_type)
    {
        return nullptr;
    }

    py::pyobj_handle object_bases{PyTuple_Pack(1, object_type)};

    if (!object_bases)
    {
        return nullptr;
    }

    #if PY_VERSION_HEX < 0x03090000
    if (py::register_python_type(module.get(), type_name_InputActivationListenerPreview, &type_spec_InputActivationListenerPreview, nullptr, object_bases.get(), nullptr) == -1)
    #else
    if (py::register_python_type(module.get(), type_name_InputActivationListenerPreview, &type_spec_InputActivationListenerPreview, object_bases.get(), nullptr) == -1)
    #endif
    {
        return nullptr;
    }


    return module.detach();
}
