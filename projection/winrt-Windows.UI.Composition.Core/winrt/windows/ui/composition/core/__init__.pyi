# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import enum
import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation
import winrt.windows.ui.composition

Self = typing.TypeVar('Self')

class CompositorController(winrt.system.Object):
    compositor: typing.Optional[winrt.windows.ui.composition.Compositor]
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositorController: ...
    def __new__(cls: typing.Type[CompositorController]) -> CompositorController:...
    def close(self) -> None: ...
    def commit(self) -> None: ...
    def ensure_previous_commit_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def add_commit_needed(self, handler: winrt.windows.foundation.TypedEventHandler[CompositorController, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_commit_needed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

