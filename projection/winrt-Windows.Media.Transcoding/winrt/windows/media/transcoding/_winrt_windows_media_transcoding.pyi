# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.media.core
import winrt.windows.media.mediaproperties
import winrt.windows.storage
import winrt.windows.storage.streams

from . import MediaVideoProcessingAlgorithm, TranscodeFailureReason

Self = typing.TypeVar('Self')

class MediaTranscoder(winrt.system.Object):
    trim_stop_time: datetime.timedelta
    trim_start_time: datetime.timedelta
    hardware_acceleration_enabled: winrt.system.Boolean
    always_reencode: winrt.system.Boolean
    video_processing_algorithm: MediaVideoProcessingAlgorithm
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaTranscoder: ...
    def __new__(cls: typing.Type[MediaTranscoder]) -> MediaTranscoder:...
    @typing.overload
    def add_audio_effect(self, activatable_class_id: str, /) -> None: ...
    @typing.overload
    def add_audio_effect(self, activatable_class_id: str, effect_required: winrt.system.Boolean, configuration: typing.Optional[winrt.windows.foundation.collections.IPropertySet], /) -> None: ...
    @typing.overload
    def add_video_effect(self, activatable_class_id: str, /) -> None: ...
    @typing.overload
    def add_video_effect(self, activatable_class_id: str, effect_required: winrt.system.Boolean, configuration: typing.Optional[winrt.windows.foundation.collections.IPropertySet], /) -> None: ...
    def clear_effects(self) -> None: ...
    def prepare_file_transcode_async(self, source: typing.Optional[winrt.windows.storage.IStorageFile], destination: typing.Optional[winrt.windows.storage.IStorageFile], profile: typing.Optional[winrt.windows.media.mediaproperties.MediaEncodingProfile], /) -> winrt.windows.foundation.IAsyncOperation[PrepareTranscodeResult]: ...
    def prepare_media_stream_source_transcode_async(self, source: typing.Optional[winrt.windows.media.core.IMediaSource], destination: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], profile: typing.Optional[winrt.windows.media.mediaproperties.MediaEncodingProfile], /) -> winrt.windows.foundation.IAsyncOperation[PrepareTranscodeResult]: ...
    def prepare_stream_transcode_async(self, source: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], destination: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], profile: typing.Optional[winrt.windows.media.mediaproperties.MediaEncodingProfile], /) -> winrt.windows.foundation.IAsyncOperation[PrepareTranscodeResult]: ...

class PrepareTranscodeResult(winrt.system.Object):
    can_transcode: winrt.system.Boolean
    failure_reason: TranscodeFailureReason
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrepareTranscodeResult: ...
    def transcode_async(self) -> winrt.windows.foundation.IAsyncActionWithProgress[winrt.system.Double]: ...

