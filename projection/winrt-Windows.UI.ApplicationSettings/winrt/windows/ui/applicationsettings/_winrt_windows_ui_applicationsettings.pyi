# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing

import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.security.credentials
import winrt.windows.system
import winrt.windows.ui.popups

from . import SettingsEdgeLocation, SupportedWebAccountActions, WebAccountAction

Self = typing.TypeVar('Self')

class AccountsSettingsPane(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AccountsSettingsPane: ...
    @staticmethod
    def get_for_current_view() -> typing.Optional[AccountsSettingsPane]: ...
    @staticmethod
    def show() -> None: ...
    @staticmethod
    def show_add_account_async() -> winrt.windows.foundation.IAsyncAction: ...
    @staticmethod
    def show_add_account_for_user_async(user: typing.Optional[winrt.windows.system.User], /) -> winrt.windows.foundation.IAsyncAction: ...
    @staticmethod
    def show_manage_accounts_async() -> winrt.windows.foundation.IAsyncAction: ...
    @staticmethod
    def show_manage_accounts_for_user_async(user: typing.Optional[winrt.windows.system.User], /) -> winrt.windows.foundation.IAsyncAction: ...
    def add_account_commands_requested(self, handler: winrt.windows.foundation.TypedEventHandler[AccountsSettingsPane, AccountsSettingsPaneCommandsRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_account_commands_requested(self, cookie: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class AccountsSettingsPaneCommandsRequestedEventArgs(winrt.system.Object):
    header_text: str
    commands: typing.Optional[winrt.windows.foundation.collections.IVector[SettingsCommand]]
    credential_commands: typing.Optional[winrt.windows.foundation.collections.IVector[CredentialCommand]]
    web_account_commands: typing.Optional[winrt.windows.foundation.collections.IVector[WebAccountCommand]]
    web_account_provider_commands: typing.Optional[winrt.windows.foundation.collections.IVector[WebAccountProviderCommand]]
    user: typing.Optional[winrt.windows.system.User]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AccountsSettingsPaneCommandsRequestedEventArgs: ...
    def get_deferral(self) -> typing.Optional[AccountsSettingsPaneEventDeferral]: ...

class AccountsSettingsPaneEventDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AccountsSettingsPaneEventDeferral: ...
    def complete(self) -> None: ...

class CredentialCommand(winrt.system.Object):
    credential_deleted: typing.Optional[CredentialCommandCredentialDeletedHandler]
    password_credential: typing.Optional[winrt.windows.security.credentials.PasswordCredential]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CredentialCommand: ...
    @typing.overload
    def __new__(cls: typing.Type[CredentialCommand], password_credential: typing.Optional[winrt.windows.security.credentials.PasswordCredential]) -> CredentialCommand:...
    @typing.overload
    def __new__(cls: typing.Type[CredentialCommand], password_credential: typing.Optional[winrt.windows.security.credentials.PasswordCredential], deleted: typing.Optional[CredentialCommandCredentialDeletedHandler]) -> CredentialCommand:...

class SettingsCommand(winrt.system.Object):
    label: str
    invoked: typing.Optional[winrt.windows.ui.popups.UICommandInvokedHandler]
    id: typing.Optional[winrt.system.Object]
    accounts_command: typing.ClassVar[typing.Optional[SettingsCommand]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsCommand: ...
    def __new__(cls: typing.Type[SettingsCommand], settings_command_id: typing.Optional[winrt.system.Object], label: str, handler: typing.Optional[winrt.windows.ui.popups.UICommandInvokedHandler]) -> SettingsCommand:...

class SettingsPane(winrt.system.Object):
    edge: typing.ClassVar[SettingsEdgeLocation]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsPane: ...
    @staticmethod
    def get_for_current_view() -> typing.Optional[SettingsPane]: ...
    @staticmethod
    def show() -> None: ...
    def add_commands_requested(self, handler: winrt.windows.foundation.TypedEventHandler[SettingsPane, SettingsPaneCommandsRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_commands_requested(self, cookie: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

class SettingsPaneCommandsRequest(winrt.system.Object):
    application_commands: typing.Optional[winrt.windows.foundation.collections.IVector[SettingsCommand]]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsPaneCommandsRequest: ...

class SettingsPaneCommandsRequestedEventArgs(winrt.system.Object):
    request: typing.Optional[SettingsPaneCommandsRequest]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsPaneCommandsRequestedEventArgs: ...

class WebAccountCommand(winrt.system.Object):
    actions: SupportedWebAccountActions
    invoked: typing.Optional[WebAccountCommandInvokedHandler]
    web_account: typing.Optional[winrt.windows.security.credentials.WebAccount]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAccountCommand: ...
    def __new__(cls: typing.Type[WebAccountCommand], web_account: typing.Optional[winrt.windows.security.credentials.WebAccount], invoked: typing.Optional[WebAccountCommandInvokedHandler], actions: SupportedWebAccountActions) -> WebAccountCommand:...

class WebAccountInvokedArgs(winrt.system.Object):
    action: WebAccountAction
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAccountInvokedArgs: ...

class WebAccountProviderCommand(winrt.system.Object):
    invoked: typing.Optional[WebAccountProviderCommandInvokedHandler]
    web_account_provider: typing.Optional[winrt.windows.security.credentials.WebAccountProvider]
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAccountProviderCommand: ...
    def __new__(cls: typing.Type[WebAccountProviderCommand], web_account_provider: typing.Optional[winrt.windows.security.credentials.WebAccountProvider], invoked: typing.Optional[WebAccountProviderCommandInvokedHandler]) -> WebAccountProviderCommand:...

CredentialCommandCredentialDeletedHandler = typing.Callable[[typing.Optional[CredentialCommand]], None]

WebAccountCommandInvokedHandler = typing.Callable[[typing.Optional[WebAccountCommand], typing.Optional[WebAccountInvokedArgs]], None]

WebAccountProviderCommandInvokedHandler = typing.Callable[[typing.Optional[WebAccountProviderCommand]], None]

